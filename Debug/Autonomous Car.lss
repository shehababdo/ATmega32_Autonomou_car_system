
Autonomous Car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001942  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005c  00800060  00001942  000019d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003c  008000bc  008000bc  00001a32  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00001aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b94  00000000  00000000  00001c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ca5  00000000  00000000  000047d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013bf  00000000  00000000  00005479  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  00006838  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c9  00000000  00000000  00006bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001475  00000000  00000000  00007585  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000089fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 84 03 	jmp	0x708	; 0x708 <__vector_1>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__vector_11>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <timer_used+0x14>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <LCD_WriteChar+0x7c>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <FORWAED+0x4>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e2 e4       	ldi	r30, 0x42	; 66
     162:	f9 e1       	ldi	r31, 0x19	; 25
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 3b       	cpi	r26, 0xBC	; 188
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	ac eb       	ldi	r26, 0xBC	; 188
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a8 3f       	cpi	r26, 0xF8	; 248
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 d7 03 	call	0x7ae	; 0x7ae <main>
     184:	0c 94 9f 0c 	jmp	0x193e	; 0x193e <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <MOTOR_init>:
#include "../../MCAL/DIO/DIO.h"
#include "../../Common/CPU_CONFIG.h"
void MOTOR_init()
{
	//LEFT MOTOR
	DIO_SetDir(PORT_A,PIN_0,OUTPUT);
     18c:	41 e0       	ldi	r20, 0x01	; 1
     18e:	60 e0       	ldi	r22, 0x00	; 0
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(PORT_A,PIN_1,OUTPUT);
     196:	41 e0       	ldi	r20, 0x01	; 1
     198:	61 e0       	ldi	r22, 0x01	; 1
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	//RIGHT MOTOR
	DIO_SetDir(PORT_A,PIN_2,OUTPUT);
     1a0:	41 e0       	ldi	r20, 0x01	; 1
     1a2:	62 e0       	ldi	r22, 0x02	; 2
     1a4:	80 e0       	ldi	r24, 0x00	; 0
     1a6:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(PORT_A,PIN_3,OUTPUT);
     1aa:	41 e0       	ldi	r20, 0x01	; 1
     1ac:	63 e0       	ldi	r22, 0x03	; 3
     1ae:	80 e0       	ldi	r24, 0x00	; 0
     1b0:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
     1b4:	08 95       	ret

000001b6 <FORWAED>:
}
void FORWAED()
{
	DIO_SetHigh(PORT_A,PIN_0);
     1b6:	60 e0       	ldi	r22, 0x00	; 0
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	DIO_SetLow(PORT_A,PIN_1);
     1be:	61 e0       	ldi	r22, 0x01	; 1
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	
	DIO_SetHigh(PORT_A,PIN_2);
     1c6:	62 e0       	ldi	r22, 0x02	; 2
     1c8:	80 e0       	ldi	r24, 0x00	; 0
     1ca:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	DIO_SetLow(PORT_A,PIN_3);
     1ce:	63 e0       	ldi	r22, 0x03	; 3
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
     1d6:	08 95       	ret

000001d8 <RIGHT>:
}
void RIGHT()
{
	DIO_SetHigh(PORT_A,PIN_0);
     1d8:	60 e0       	ldi	r22, 0x00	; 0
     1da:	80 e0       	ldi	r24, 0x00	; 0
     1dc:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	DIO_SetLow(PORT_A,PIN_1);
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	80 e0       	ldi	r24, 0x00	; 0
     1e4:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	
	DIO_SetLow(PORT_A,PIN_2);
     1e8:	62 e0       	ldi	r22, 0x02	; 2
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	DIO_SetLow(PORT_A,PIN_3);
     1f0:	63 e0       	ldi	r22, 0x03	; 3
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
     1f8:	08 95       	ret

000001fa <LEFT>:
}
void LEFT()
{
	DIO_SetLow(PORT_A,PIN_0);
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	DIO_SetLow(PORT_A,PIN_1);
     202:	61 e0       	ldi	r22, 0x01	; 1
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	
	DIO_SetHigh(PORT_A,PIN_2);
     20a:	62 e0       	ldi	r22, 0x02	; 2
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	DIO_SetLow(PORT_A,PIN_3);
     212:	63 e0       	ldi	r22, 0x03	; 3
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
     21a:	08 95       	ret

0000021c <LCD_WriteCMD>:
//	LCD_WriteCMD(0x06);
	*/
}

void LCD_WriteCMD(uint8 cmd)   /*Write command inside control register*/
{
     21c:	cf 93       	push	r28
     21e:	c8 2f       	mov	r28, r24
	/*RS is logic(0) to write inside control register*/
	DIO_SetLow(LCD_CMD_PORT, LCD_RS);
     220:	61 e0       	ldi	r22, 0x01	; 1
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*RW is logic(0) to write on LCD*/
	DIO_SetLow(LCD_CMD_PORT, LCD_RW);
     228:	62 e0       	ldi	r22, 0x02	; 2
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*To be sure of enable state before start operation*/
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     230:	63 e0       	ldi	r22, 0x03	; 3
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*Send high nibble of command*/
	PORTA = (cmd & 0xF0) | (PORTA & 0x0F);
     238:	8b b3       	in	r24, 0x1b	; 27
     23a:	9c 2f       	mov	r25, r28
     23c:	90 7f       	andi	r25, 0xF0	; 240
     23e:	8f 70       	andi	r24, 0x0F	; 15
     240:	89 2b       	or	r24, r25
     242:	8b bb       	out	0x1b, r24	; 27
	DIO_SetHigh(LCD_CMD_PORT, LCD_EN);
     244:	63 e0       	ldi	r22, 0x03	; 3
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     24c:	8f e9       	ldi	r24, 0x9F	; 159
     24e:	9f e0       	ldi	r25, 0x0F	; 15
     250:	01 97       	sbiw	r24, 0x01	; 1
     252:	f1 f7       	brne	.-4      	; 0x250 <LCD_WriteCMD+0x34>
     254:	00 c0       	rjmp	.+0      	; 0x256 <LCD_WriteCMD+0x3a>
     256:	00 00       	nop
	_delay_ms(1);
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     258:	63 e0       	ldi	r22, 0x03	; 3
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*send low nibble of command*/
	PORTA = (cmd << 4) | (PORTA & 0x0F);
     260:	20 e1       	ldi	r18, 0x10	; 16
     262:	c2 9f       	mul	r28, r18
     264:	c0 01       	movw	r24, r0
     266:	11 24       	eor	r1, r1
     268:	9b b3       	in	r25, 0x1b	; 27
     26a:	9f 70       	andi	r25, 0x0F	; 15
     26c:	89 2b       	or	r24, r25
     26e:	8b bb       	out	0x1b, r24	; 27
	DIO_SetHigh(LCD_CMD_PORT, LCD_EN);
     270:	63 e0       	ldi	r22, 0x03	; 3
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
     278:	8f e9       	ldi	r24, 0x9F	; 159
     27a:	9f e0       	ldi	r25, 0x0F	; 15
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <LCD_WriteCMD+0x60>
     280:	00 c0       	rjmp	.+0      	; 0x282 <LCD_WriteCMD+0x66>
     282:	00 00       	nop
	_delay_ms(1);
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     284:	63 e0       	ldi	r22, 0x03	; 3
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
     28c:	8f e3       	ldi	r24, 0x3F	; 63
     28e:	9f e1       	ldi	r25, 0x1F	; 31
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <LCD_WriteCMD+0x74>
     294:	00 c0       	rjmp	.+0      	; 0x296 <LCD_WriteCMD+0x7a>
     296:	00 00       	nop
	/*Delay for 2 millisecond*/
	_delay_ms(2);
}
     298:	cf 91       	pop	r28
     29a:	08 95       	ret

0000029c <LCD_Init>:


void LCD_Init(void)/*Initialize LCD*/
{
	/*Define direction for command pins*/
	DIO_SetDir(LCD_CMD_PORT, LCD_RS, LCD_OUTPUT);
     29c:	41 e0       	ldi	r20, 0x01	; 1
     29e:	61 e0       	ldi	r22, 0x01	; 1
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(LCD_CMD_PORT, LCD_RW, LCD_OUTPUT);
     2a6:	41 e0       	ldi	r20, 0x01	; 1
     2a8:	62 e0       	ldi	r22, 0x02	; 2
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(LCD_CMD_PORT, LCD_EN, LCD_OUTPUT);
     2b0:	41 e0       	ldi	r20, 0x01	; 1
     2b2:	63 e0       	ldi	r22, 0x03	; 3
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	/*Define direction for data pins*/
	DIO_SetDir(LCD_DTA_PORT, LCD_D4, LCD_OUTPUT);
     2ba:	41 e0       	ldi	r20, 0x01	; 1
     2bc:	64 e0       	ldi	r22, 0x04	; 4
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(LCD_DTA_PORT, LCD_D5, LCD_OUTPUT);
     2c4:	41 e0       	ldi	r20, 0x01	; 1
     2c6:	65 e0       	ldi	r22, 0x05	; 5
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(LCD_DTA_PORT, LCD_D6, LCD_OUTPUT);
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	66 e0       	ldi	r22, 0x06	; 6
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(LCD_DTA_PORT, LCD_D7, LCD_OUTPUT);
     2d8:	41 e0       	ldi	r20, 0x01	; 1
     2da:	67 e0       	ldi	r22, 0x07	; 7
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
     2e2:	2f ef       	ldi	r18, 0xFF	; 255
     2e4:	86 e7       	ldi	r24, 0x76	; 118
     2e6:	91 e0       	ldi	r25, 0x01	; 1
     2e8:	21 50       	subi	r18, 0x01	; 1
     2ea:	80 40       	sbci	r24, 0x00	; 0
     2ec:	90 40       	sbci	r25, 0x00	; 0
     2ee:	e1 f7       	brne	.-8      	; 0x2e8 <LCD_Init+0x4c>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <LCD_Init+0x56>
     2f2:	00 00       	nop
	/*LCD controller is slower than MC speed*/
	/* Delay 30ms to ensure the initialization of the LCD driver */
	_delay_ms(30);

	/* Return Home  */
	LCD_WriteCMD(LCD_HOME_CMD);
     2f4:	82 e0       	ldi	r24, 0x02	; 2
     2f6:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     2fa:	8f e5       	ldi	r24, 0x5F	; 95
     2fc:	9a ee       	ldi	r25, 0xEA	; 234
     2fe:	01 97       	sbiw	r24, 0x01	; 1
     300:	f1 f7       	brne	.-4      	; 0x2fe <LCD_Init+0x62>
     302:	00 c0       	rjmp	.+0      	; 0x304 <LCD_Init+0x68>
     304:	00 00       	nop
	_delay_ms(15);

	/* Function Set  */
	LCD_WriteCMD(LCD_FUNCTION_SET_CMD);
     306:	88 e2       	ldi	r24, 0x28	; 40
     308:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     30c:	8f e9       	ldi	r24, 0x9F	; 159
     30e:	9f e0       	ldi	r25, 0x0F	; 15
     310:	01 97       	sbiw	r24, 0x01	; 1
     312:	f1 f7       	brne	.-4      	; 0x310 <LCD_Init+0x74>
     314:	00 c0       	rjmp	.+0      	; 0x316 <LCD_Init+0x7a>
     316:	00 00       	nop
	_delay_ms(1);

	/* Display ON / OFF Control */
	LCD_WriteCMD(LCD_CONTROL_CMD);
     318:	8c e0       	ldi	r24, 0x0C	; 12
     31a:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     31e:	8f e9       	ldi	r24, 0x9F	; 159
     320:	9f e0       	ldi	r25, 0x0F	; 15
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	f1 f7       	brne	.-4      	; 0x322 <LCD_Init+0x86>
     326:	00 c0       	rjmp	.+0      	; 0x328 <LCD_Init+0x8c>
     328:	00 00       	nop
	_delay_ms(1);

	/* Clear Display */
	LCD_WriteCMD(LCD_CLEAR_CMD);
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     330:	8f e5       	ldi	r24, 0x5F	; 95
     332:	9a ee       	ldi	r25, 0xEA	; 234
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	f1 f7       	brne	.-4      	; 0x334 <LCD_Init+0x98>
     338:	00 c0       	rjmp	.+0      	; 0x33a <LCD_Init+0x9e>
     33a:	00 00       	nop
	_delay_ms(15);

	/* Entry Mode Set  */
	LCD_WriteCMD(LCD_MODE_CMD);
     33c:	83 e0       	ldi	r24, 0x03	; 3
     33e:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     342:	8f e3       	ldi	r24, 0x3F	; 63
     344:	9f e1       	ldi	r25, 0x1F	; 31
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <LCD_Init+0xaa>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <LCD_Init+0xb0>
     34c:	00 00       	nop
     34e:	08 95       	ret

00000350 <LCD_WriteChar>:
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
	/*Delay for 2 millisecond*/
	_delay_ms(2);
}
void LCD_WriteChar(uint8 data)/*write data inside data register*/
{
     350:	cf 93       	push	r28
     352:	c8 2f       	mov	r28, r24
	/*RS is logic(1) to write inside data register*/
	DIO_SetHigh(LCD_CMD_PORT, LCD_RS);  // DATA INPUT ---> RS HIGH
     354:	61 e0       	ldi	r22, 0x01	; 1
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	/*RW is logic(0) to write on LCD*/
	DIO_SetLow(LCD_CMD_PORT, LCD_RW);   // 0 ---> WRITE 
     35c:	62 e0       	ldi	r22, 0x02	; 2
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*To be sure of enable state before start operation*/
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     364:	63 e0       	ldi	r22, 0x03	; 3
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*Send high nibble of command*/
	PORTA = (data & 0xF0) | (PORTA & 0x0F);
     36c:	8b b3       	in	r24, 0x1b	; 27
     36e:	9c 2f       	mov	r25, r28
     370:	90 7f       	andi	r25, 0xF0	; 240
     372:	8f 70       	andi	r24, 0x0F	; 15
     374:	89 2b       	or	r24, r25
     376:	8b bb       	out	0x1b, r24	; 27
	DIO_SetHigh(LCD_CMD_PORT, LCD_EN);
     378:	63 e0       	ldi	r22, 0x03	; 3
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
     380:	8f e9       	ldi	r24, 0x9F	; 159
     382:	9f e0       	ldi	r25, 0x0F	; 15
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	f1 f7       	brne	.-4      	; 0x384 <LCD_WriteChar+0x34>
     388:	00 c0       	rjmp	.+0      	; 0x38a <LCD_WriteChar+0x3a>
     38a:	00 00       	nop
	_delay_ms(1);
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     38c:	63 e0       	ldi	r22, 0x03	; 3
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	/*send low nibble of command*/
	PORTA = (data << 4) | (PORTA & 0x0F);
     394:	20 e1       	ldi	r18, 0x10	; 16
     396:	c2 9f       	mul	r28, r18
     398:	c0 01       	movw	r24, r0
     39a:	11 24       	eor	r1, r1
     39c:	9b b3       	in	r25, 0x1b	; 27
     39e:	9f 70       	andi	r25, 0x0F	; 15
     3a0:	89 2b       	or	r24, r25
     3a2:	8b bb       	out	0x1b, r24	; 27
	DIO_SetHigh(LCD_CMD_PORT, LCD_EN);
     3a4:	63 e0       	ldi	r22, 0x03	; 3
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
     3ac:	8f e9       	ldi	r24, 0x9F	; 159
     3ae:	9f e0       	ldi	r25, 0x0F	; 15
     3b0:	01 97       	sbiw	r24, 0x01	; 1
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCD_WriteChar+0x60>
     3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <LCD_WriteChar+0x66>
     3b6:	00 00       	nop
	_delay_ms(1);
	DIO_SetLow(LCD_CMD_PORT, LCD_EN);
     3b8:	63 e0       	ldi	r22, 0x03	; 3
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
     3c0:	8f e3       	ldi	r24, 0x3F	; 63
     3c2:	9f e1       	ldi	r25, 0x1F	; 31
     3c4:	01 97       	sbiw	r24, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <LCD_WriteChar+0x74>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <LCD_WriteChar+0x7a>
     3ca:	00 00       	nop
	/*Delay for 2 millisecond*/
	_delay_ms(2);
}
     3cc:	cf 91       	pop	r28
     3ce:	08 95       	ret

000003d0 <LCD_WriteString>:
void LCD_WriteString(char string[]) /*write string on screen*/
{
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	ec 01       	movw	r28, r24
	while(*string != '\0')
     3d6:	03 c0       	rjmp	.+6      	; 0x3de <LCD_WriteString+0xe>
	{
		LCD_WriteChar(*string);
     3d8:	0e 94 a8 01 	call	0x350	; 0x350 <LCD_WriteChar>
	//	_delay_ms(10);
		string++;
     3dc:	21 96       	adiw	r28, 0x01	; 1
	/*Delay for 2 millisecond*/
	_delay_ms(2);
}
void LCD_WriteString(char string[]) /*write string on screen*/
{
	while(*string != '\0')
     3de:	88 81       	ld	r24, Y
     3e0:	81 11       	cpse	r24, r1
     3e2:	fa cf       	rjmp	.-12     	; 0x3d8 <LCD_WriteString+0x8>
		LCD_WriteChar(*string);
	//	_delay_ms(10);
		string++;
	}
	
}
     3e4:	df 91       	pop	r29
     3e6:	cf 91       	pop	r28
     3e8:	08 95       	ret

000003ea <LCD_Clear>:
void LCD_Clear(void)/*Clear data display on screen*/
{
	LCD_WriteCMD(0x01);
     3ea:	81 e0       	ldi	r24, 0x01	; 1
     3ec:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     3f0:	8f e5       	ldi	r24, 0x5F	; 95
     3f2:	9a ee       	ldi	r25, 0xEA	; 234
     3f4:	01 97       	sbiw	r24, 0x01	; 1
     3f6:	f1 f7       	brne	.-4      	; 0x3f4 <LCD_Clear+0xa>
     3f8:	00 c0       	rjmp	.+0      	; 0x3fa <LCD_Clear+0x10>
     3fa:	00 00       	nop
     3fc:	08 95       	ret

000003fe <LCD_WriteAtPosition>:
	_delay_ms(15);
}

void LCD_WriteAtPosition(uint8 lineNumber , uint8 digitNumber)
{
	if ( (digitNumber>0 && digitNumber<=15) && (lineNumber>1 && lineNumber<=2) )
     3fe:	9f ef       	ldi	r25, 0xFF	; 255
     400:	96 0f       	add	r25, r22
     402:	9f 30       	cpi	r25, 0x0F	; 15
     404:	80 f4       	brcc	.+32     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	71 f4       	brne	.+28     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
	{
	    switch(lineNumber)
     40a:	81 30       	cpi	r24, 0x01	; 1
     40c:	19 f0       	breq	.+6      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     40e:	82 30       	cpi	r24, 0x02	; 2
     410:	31 f0       	breq	.+12     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     412:	08 95       	ret
	    {
		    case 1:
		    	LCD_WriteCMD(digitNumber+127);   // 127 (0x80) if the offset address of line 1 in DDRAM at LM06
     414:	8f e7       	ldi	r24, 0x7F	; 127
     416:	86 0f       	add	r24, r22
     418:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
		    break;
     41c:	08 95       	ret
		    case 2:
		    	LCD_WriteCMD(digitNumber+191);	// 191 (0xBF) if the offset address of line 1 in DDRAM at LM06
     41e:	8f eb       	ldi	r24, 0xBF	; 191
     420:	86 0f       	add	r24, r22
     422:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_WriteCMD>
     426:	08 95       	ret

00000428 <servo_init>:
 */ 
#include "SERVO.h"


void servo_init(void)
{
     428:	0f 93       	push	r16
     42a:	1f 93       	push	r17
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	cd b7       	in	r28, 0x3d	; 61
     432:	de b7       	in	r29, 0x3e	; 62
     434:	29 97       	sbiw	r28, 0x09	; 9
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	f8 94       	cli
     43a:	de bf       	out	0x3e, r29	; 62
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	cd bf       	out	0x3d, r28	; 61
	// INITIALIZATION FOR TIMER 1 CHANNEL B
	DDRD |= (1<<4);  //set OC1A OUTPUT 
     440:	81 b3       	in	r24, 0x11	; 17
     442:	80 61       	ori	r24, 0x10	; 16
     444:	81 bb       	out	0x11, r24	; 17
	TIMER_Set_OCR_Value(TIMER1_A,40000); // periodic time equals 20 ms 
     446:	60 e4       	ldi	r22, 0x40	; 64
     448:	7c e9       	ldi	r23, 0x9C	; 156
     44a:	83 e0       	ldi	r24, 0x03	; 3
     44c:	0e 94 a2 07 	call	0xf44	; 0xf44 <TIMER_Set_OCR_Value>
    timerUsed.COM_Pin = NON_INVERTED;
    timerUsed.Timer_OCR_Interrupt = OCR_disable;
    timerUsed.Timer_ICR_Interrupt = ICR_disable;
    timerUsed.Timer_OVF_Interrupt = TOVF_disable;
	 timerUsed.Timer_Prescale = PRESCALING_CLK8;
    TIMER_Init(timerUsed);
     450:	01 e0       	ldi	r16, 0x01	; 1
     452:	11 e0       	ldi	r17, 0x01	; 1
     454:	2b 81       	ldd	r18, Y+3	; 0x03
     456:	33 e0       	ldi	r19, 0x03	; 3
     458:	42 e0       	ldi	r20, 0x02	; 2
     45a:	52 e0       	ldi	r21, 0x02	; 2
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	70 e0       	ldi	r23, 0x00	; 0
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	0e 94 6d 06 	call	0xcda	; 0xcda <TIMER_Init>
	
}
     466:	29 96       	adiw	r28, 0x09	; 9
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	f8 94       	cli
     46c:	de bf       	out	0x3e, r29	; 62
     46e:	0f be       	out	0x3f, r0	; 63
     470:	cd bf       	out	0x3d, r28	; 61
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	0f 91       	pop	r16
     47a:	08 95       	ret

0000047c <servo_90_anti_clkwise>:

void servo_90_anti_clkwise(void)
{
	TCNT1=0; 
     47c:	1d bc       	out	0x2d, r1	; 45
     47e:	1c bc       	out	0x2c, r1	; 44
	TIMER_Set_OCR_Value(TIMER1_B,1000);  //----------> TO get 1/2 ms high 
     480:	68 ee       	ldi	r22, 0xE8	; 232
     482:	73 e0       	ldi	r23, 0x03	; 3
     484:	84 e0       	ldi	r24, 0x04	; 4
     486:	0e 94 a2 07 	call	0xf44	; 0xf44 <TIMER_Set_OCR_Value>
     48a:	08 95       	ret

0000048c <servo_90_clkwise>:
}

void servo_90_clkwise(void)
{
	TCNT1=0;
     48c:	1d bc       	out	0x2d, r1	; 45
     48e:	1c bc       	out	0x2c, r1	; 44
	TIMER_Set_OCR_Value(TIMER1_B,5000);  //----------> TO get 2.5 ms high
     490:	68 e8       	ldi	r22, 0x88	; 136
     492:	73 e1       	ldi	r23, 0x13	; 19
     494:	84 e0       	ldi	r24, 0x04	; 4
     496:	0e 94 a2 07 	call	0xf44	; 0xf44 <TIMER_Set_OCR_Value>
     49a:	08 95       	ret

0000049c <servo_zero>:
}

void servo_zero(void)
{
	TCNT1=0;
     49c:	1d bc       	out	0x2d, r1	; 45
     49e:	1c bc       	out	0x2c, r1	; 44
	TIMER_Set_OCR_Value(TIMER1_B,3000);  //----------> TO get 1.5 ms high
     4a0:	68 eb       	ldi	r22, 0xB8	; 184
     4a2:	7b e0       	ldi	r23, 0x0B	; 11
     4a4:	84 e0       	ldi	r24, 0x04	; 4
     4a6:	0e 94 a2 07 	call	0xf44	; 0xf44 <TIMER_Set_OCR_Value>
     4aa:	08 95       	ret

000004ac <pulse>:
	set_bit(GICR,INT0);
	timer_used();
	sei();
}
float pulse(void)
{
     4ac:	8f 92       	push	r8
     4ae:	9f 92       	push	r9
     4b0:	af 92       	push	r10
     4b2:	bf 92       	push	r11
     4b4:	cf 92       	push	r12
     4b6:	df 92       	push	r13
     4b8:	ef 92       	push	r14
     4ba:	ff 92       	push	r15

	DIO_SetHigh(PORT_D,trig_pin);
     4bc:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <trig_pin>
     4c0:	83 e0       	ldi	r24, 0x03	; 3
     4c2:	0e 94 01 06 	call	0xc02	; 0xc02 <DIO_SetHigh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4c6:	80 e5       	ldi	r24, 0x50	; 80
     4c8:	8a 95       	dec	r24
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <pulse+0x1c>
	_delay_us(15);
	DIO_SetLow(PORT_D,trig_pin);
     4cc:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <trig_pin>
     4d0:	83 e0       	ldi	r24, 0x03	; 3
     4d2:	0e 94 35 06 	call	0xc6a	; 0xc6a <DIO_SetLow>
	
	set_bit(GICR,INT0);
     4d6:	8b b7       	in	r24, 0x3b	; 59
     4d8:	80 64       	ori	r24, 0x40	; 64
     4da:	8b bf       	out	0x3b, r24	; 59
	
	/*start detecting the pulse*/
	if(state==3)
     4dc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <state>
     4e0:	83 30       	cpi	r24, 0x03	; 3
     4e2:	09 f0       	breq	.+2      	; 0x4e6 <pulse+0x3a>
     4e4:	a6 c0       	rjmp	.+332    	; 0x632 <pulse+0x186>
	{
		freq=16000000.0/((Tp+Tpc*256ul)*256.0);
     4e6:	60 91 bf 00 	lds	r22, 0x00BF	; 0x8000bf <Tpc>
     4ea:	86 2f       	mov	r24, r22
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	a0 e0       	ldi	r26, 0x00	; 0
     4f0:	b0 e0       	ldi	r27, 0x00	; 0
     4f2:	ba 2f       	mov	r27, r26
     4f4:	a9 2f       	mov	r26, r25
     4f6:	98 2f       	mov	r25, r24
     4f8:	88 27       	eor	r24, r24
     4fa:	20 91 bd 00 	lds	r18, 0x00BD	; 0x8000bd <Tp>
     4fe:	bc 01       	movw	r22, r24
     500:	cd 01       	movw	r24, r26
     502:	62 0f       	add	r22, r18
     504:	71 1d       	adc	r23, r1
     506:	81 1d       	adc	r24, r1
     508:	91 1d       	adc	r25, r1
     50a:	0e 94 ca 08 	call	0x1194	; 0x1194 <__floatunsisf>
     50e:	4b 01       	movw	r8, r22
     510:	5c 01       	movw	r10, r24
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	40 e8       	ldi	r20, 0x80	; 128
     518:	53 e4       	ldi	r21, 0x43	; 67
     51a:	0e 94 81 09 	call	0x1302	; 0x1302 <__mulsf3>
     51e:	9b 01       	movw	r18, r22
     520:	ac 01       	movw	r20, r24
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	74 e2       	ldi	r23, 0x24	; 36
     526:	84 e7       	ldi	r24, 0x74	; 116
     528:	9b e4       	ldi	r25, 0x4B	; 75
     52a:	0e 94 29 08 	call	0x1052	; 0x1052 <__divsf3>
     52e:	6b 01       	movw	r12, r22
     530:	7c 01       	movw	r14, r24
     532:	60 93 c2 00 	sts	0x00C2, r22	; 0x8000c2 <freq>
     536:	70 93 c3 00 	sts	0x00C3, r23	; 0x8000c3 <freq+0x1>
     53a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <freq+0x2>
     53e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <freq+0x3>
		duty=((float)(Td+Tdc*256ul)/(Tp+Tpc*256ul));
     542:	60 91 be 00 	lds	r22, 0x00BE	; 0x8000be <Tdc>
     546:	86 2f       	mov	r24, r22
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	a0 e0       	ldi	r26, 0x00	; 0
     54c:	b0 e0       	ldi	r27, 0x00	; 0
     54e:	ba 2f       	mov	r27, r26
     550:	a9 2f       	mov	r26, r25
     552:	98 2f       	mov	r25, r24
     554:	88 27       	eor	r24, r24
     556:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__data_end>
     55a:	bc 01       	movw	r22, r24
     55c:	cd 01       	movw	r24, r26
     55e:	62 0f       	add	r22, r18
     560:	71 1d       	adc	r23, r1
     562:	81 1d       	adc	r24, r1
     564:	91 1d       	adc	r25, r1
     566:	0e 94 ca 08 	call	0x1194	; 0x1194 <__floatunsisf>
     56a:	a5 01       	movw	r20, r10
     56c:	94 01       	movw	r18, r8
     56e:	0e 94 29 08 	call	0x1052	; 0x1052 <__divsf3>
     572:	9b 01       	movw	r18, r22
     574:	ac 01       	movw	r20, r24
     576:	60 93 d2 00 	sts	0x00D2, r22	; 0x8000d2 <duty>
     57a:	70 93 d3 00 	sts	0x00D3, r23	; 0x8000d3 <duty+0x1>
     57e:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <duty+0x2>
     582:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <duty+0x3>
		duty_freq=freq*duty;
     586:	c7 01       	movw	r24, r14
     588:	b6 01       	movw	r22, r12
     58a:	0e 94 81 09 	call	0x1302	; 0x1302 <__mulsf3>
     58e:	60 93 d6 00 	sts	0x00D6, r22	; 0x8000d6 <duty_freq>
     592:	70 93 d7 00 	sts	0x00D7, r23	; 0x8000d7 <duty_freq+0x1>
     596:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <duty_freq+0x2>
     59a:	90 93 d9 00 	sts	0x00D9, r25	; 0x8000d9 <duty_freq+0x3>
		DDRC=duty_freq;
     59e:	0e 94 9b 08 	call	0x1136	; 0x1136 <__fixunssfsi>
     5a2:	64 bb       	out	0x14, r22	; 20
		PORTC=freq;
     5a4:	60 91 c2 00 	lds	r22, 0x00C2	; 0x8000c2 <freq>
     5a8:	70 91 c3 00 	lds	r23, 0x00C3	; 0x8000c3 <freq+0x1>
     5ac:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <freq+0x2>
     5b0:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <freq+0x3>
     5b4:	0e 94 9b 08 	call	0x1136	; 0x1136 <__fixunssfsi>
     5b8:	65 bb       	out	0x15, r22	; 21
		tot_time=1/duty_freq;
     5ba:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <duty_freq>
     5be:	30 91 d7 00 	lds	r19, 0x00D7	; 0x8000d7 <duty_freq+0x1>
     5c2:	40 91 d8 00 	lds	r20, 0x00D8	; 0x8000d8 <duty_freq+0x2>
     5c6:	50 91 d9 00 	lds	r21, 0x00D9	; 0x8000d9 <duty_freq+0x3>
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	80 e8       	ldi	r24, 0x80	; 128
     5d0:	9f e3       	ldi	r25, 0x3F	; 63
     5d2:	0e 94 29 08 	call	0x1052	; 0x1052 <__divsf3>
     5d6:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <tot_time>
     5da:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <tot_time+0x1>
     5de:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <tot_time+0x2>
     5e2:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <tot_time+0x3>
		Time=tot_time/2.0;
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	40 e0       	ldi	r20, 0x00	; 0
     5ec:	5f e3       	ldi	r21, 0x3F	; 63
     5ee:	0e 94 81 09 	call	0x1302	; 0x1302 <__mulsf3>
     5f2:	60 93 ce 00 	sts	0x00CE, r22	; 0x8000ce <Time>
     5f6:	70 93 cf 00 	sts	0x00CF, r23	; 0x8000cf <Time+0x1>
     5fa:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <Time+0x2>
     5fe:	90 93 d1 00 	sts	0x00D1, r25	; 0x8000d1 <Time+0x3>
		dist=Time*3.43;
     602:	2f e1       	ldi	r18, 0x1F	; 31
     604:	35 e8       	ldi	r19, 0x85	; 133
     606:	4b e5       	ldi	r20, 0x5B	; 91
     608:	50 e4       	ldi	r21, 0x40	; 64
     60a:	0e 94 81 09 	call	0x1302	; 0x1302 <__mulsf3>
     60e:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <dist>
     612:	70 93 c7 00 	sts	0x00C7, r23	; 0x8000c7 <dist+0x1>
     616:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <dist+0x2>
     61a:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <dist+0x3>
		Tp=0,Tpc=0,Tdc=0,Td=0;
     61e:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <Tp>
     622:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <Tpc>
     626:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <Tdc>
     62a:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__data_end>
		state=0;
     62e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <state>
	}
	if (dist==0)
     632:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <dist>
     636:	d0 90 c7 00 	lds	r13, 0x00C7	; 0x8000c7 <dist+0x1>
     63a:	e0 90 c8 00 	lds	r14, 0x00C8	; 0x8000c8 <dist+0x2>
     63e:	f0 90 c9 00 	lds	r15, 0x00C9	; 0x8000c9 <dist+0x3>
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	a9 01       	movw	r20, r18
     648:	c7 01       	movw	r24, r14
     64a:	b6 01       	movw	r22, r12
     64c:	0e 94 24 08 	call	0x1048	; 0x1048 <__cmpsf2>
     650:	81 11       	cpse	r24, r1
     652:	0e c0       	rjmp	.+28     	; 0x670 <pulse+0x1c4>
	{ return 1/0;} 
     654:	81 e0       	ldi	r24, 0x01	; 1
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	60 e0       	ldi	r22, 0x00	; 0
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__divmodhi4>
     660:	07 2e       	mov	r0, r23
     662:	00 0c       	add	r0, r0
     664:	88 0b       	sbc	r24, r24
     666:	99 0b       	sbc	r25, r25
     668:	0e 94 cc 08 	call	0x1198	; 0x1198 <__floatsisf>
     66c:	6b 01       	movw	r12, r22
     66e:	7c 01       	movw	r14, r24
	else
	{ return dist;}
}
     670:	c7 01       	movw	r24, r14
     672:	b6 01       	movw	r22, r12
     674:	ff 90       	pop	r15
     676:	ef 90       	pop	r14
     678:	df 90       	pop	r13
     67a:	cf 90       	pop	r12
     67c:	bf 90       	pop	r11
     67e:	af 90       	pop	r10
     680:	9f 90       	pop	r9
     682:	8f 90       	pop	r8
     684:	08 95       	ret

00000686 <timer_used>:

void timer_used(void)
{
     686:	0f 93       	push	r16
     688:	1f 93       	push	r17
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	cd b7       	in	r28, 0x3d	; 61
     690:	de b7       	in	r29, 0x3e	; 62
     692:	29 97       	sbiw	r28, 0x09	; 9
     694:	0f b6       	in	r0, 0x3f	; 63
     696:	f8 94       	cli
     698:	de bf       	out	0x3e, r29	; 62
     69a:	0f be       	out	0x3f, r0	; 63
     69c:	cd bf       	out	0x3d, r28	; 61
	timerUsed.Timer_Mode = NORMAL;
	timerUsed.COM_Pin = Disconnected;
	timerUsed.Timer_OCR_Interrupt = OCR_disable;
	timerUsed.Timer_OVF_Interrupt = TOVF_enable;
	timerUsed.Timer_Prescale = PRESCALING_CLK256;
	TIMER_Init(timerUsed);
     69e:	00 e0       	ldi	r16, 0x00	; 0
     6a0:	1a 81       	ldd	r17, Y+2	; 0x02
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	3c 81       	ldd	r19, Y+4	; 0x04
     6a6:	40 e0       	ldi	r20, 0x00	; 0
     6a8:	54 e0       	ldi	r21, 0x04	; 4
     6aa:	61 e0       	ldi	r22, 0x01	; 1
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	89 85       	ldd	r24, Y+9	; 0x09
     6b0:	0e 94 6d 06 	call	0xcda	; 0xcda <TIMER_Init>
}
     6b4:	29 96       	adiw	r28, 0x09	; 9
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	de bf       	out	0x3e, r29	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	cd bf       	out	0x3d, r28	; 61
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	08 95       	ret

000006ca <US_Init>:
char echo_pin =2;
 
void US_Init(void)
{
	//RISING EDGE
	set_bit(MCUCR,ISC00);
     6ca:	85 b7       	in	r24, 0x35	; 53
     6cc:	81 60       	ori	r24, 0x01	; 1
     6ce:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR,ISC01);
     6d0:	85 b7       	in	r24, 0x35	; 53
     6d2:	82 60       	ori	r24, 0x02	; 2
     6d4:	85 bf       	out	0x35, r24	; 53
	
	DIO_SetDir(PORT_D,trig_pin,OUTPUT);
     6d6:	41 e0       	ldi	r20, 0x01	; 1
     6d8:	60 91 61 00 	lds	r22, 0x0061	; 0x800061 <trig_pin>
     6dc:	83 e0       	ldi	r24, 0x03	; 3
     6de:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	DIO_SetDir(PORT_D,echo_pin,OUTPUT);
     6e2:	41 e0       	ldi	r20, 0x01	; 1
     6e4:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     6e8:	83 e0       	ldi	r24, 0x03	; 3
     6ea:	0e 94 90 05 	call	0xb20	; 0xb20 <DIO_SetDir>
	
	set_bit(GICR,INT0);
     6ee:	8b b7       	in	r24, 0x3b	; 59
     6f0:	80 64       	ori	r24, 0x40	; 64
     6f2:	8b bf       	out	0x3b, r24	; 59
	set_bit(SREG, 7);
     6f4:	8f b7       	in	r24, 0x3f	; 63
     6f6:	80 68       	ori	r24, 0x80	; 128
     6f8:	8f bf       	out	0x3f, r24	; 63
	
	/*TIMER 0 SETUP*/
	/*TCCR0=0x04;
	TIMSK=1;*/
	set_bit(GICR,INT0);
     6fa:	8b b7       	in	r24, 0x3b	; 59
     6fc:	80 64       	ori	r24, 0x40	; 64
     6fe:	8b bf       	out	0x3b, r24	; 59
	timer_used();
     700:	0e 94 43 03 	call	0x686	; 0x686 <timer_used>
	sei();
     704:	78 94       	sei
     706:	08 95       	ret

00000708 <__vector_1>:
	timerUsed.Timer_Prescale = PRESCALING_CLK256;
	TIMER_Init(timerUsed);
}

ISR(INT0_vect)
{
     708:	1f 92       	push	r1
     70a:	0f 92       	push	r0
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	0f 92       	push	r0
     710:	11 24       	eor	r1, r1
     712:	8f 93       	push	r24
	if (state==0)
     714:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <state>
     718:	81 11       	cpse	r24, r1
     71a:	0f c0       	rjmp	.+30     	; 0x73a <__vector_1+0x32>
	{	
		TCCR0=0x04;
     71c:	84 e0       	ldi	r24, 0x04	; 4
     71e:	83 bf       	out	0x33, r24	; 51
		TCNT0=0;
     720:	12 be       	out	0x32, r1	; 50
		count=0;
     722:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <count>
		// FALLING EDGE
		clr_bit(MCUCR,ISC00);
     726:	85 b7       	in	r24, 0x35	; 53
     728:	8e 7f       	andi	r24, 0xFE	; 254
     72a:	85 bf       	out	0x35, r24	; 53
		set_bit(MCUCR,ISC01);
     72c:	85 b7       	in	r24, 0x35	; 53
     72e:	82 60       	ori	r24, 0x02	; 2
     730:	85 bf       	out	0x35, r24	; 53
		state=1;
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <state>
     738:	23 c0       	rjmp	.+70     	; 0x780 <__vector_1+0x78>
	}
	else if(state==1)
     73a:	81 30       	cpi	r24, 0x01	; 1
     73c:	89 f4       	brne	.+34     	; 0x760 <__vector_1+0x58>
	{
		Td=TCNT0;
     73e:	82 b7       	in	r24, 0x32	; 50
     740:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
		Tdc=count;
     744:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <count>
     748:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <Tdc>
		//RISING EDGE
		set_bit(MCUCR,ISC00);
     74c:	85 b7       	in	r24, 0x35	; 53
     74e:	81 60       	ori	r24, 0x01	; 1
     750:	85 bf       	out	0x35, r24	; 53
		set_bit(MCUCR,ISC01);
     752:	85 b7       	in	r24, 0x35	; 53
     754:	82 60       	ori	r24, 0x02	; 2
     756:	85 bf       	out	0x35, r24	; 53
		
		state=2;
     758:	82 e0       	ldi	r24, 0x02	; 2
     75a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <state>
     75e:	10 c0       	rjmp	.+32     	; 0x780 <__vector_1+0x78>
	}
	else if (state ==2)
     760:	82 30       	cpi	r24, 0x02	; 2
     762:	71 f4       	brne	.+28     	; 0x780 <__vector_1+0x78>
	{
		Tp=TCNT0;
     764:	82 b7       	in	r24, 0x32	; 50
     766:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <Tp>
		Tpc=count;
     76a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <count>
     76e:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <Tpc>
		clr_bit(GICR,INT0);
     772:	8b b7       	in	r24, 0x3b	; 59
     774:	8f 7b       	andi	r24, 0xBF	; 191
     776:	8b bf       	out	0x3b, r24	; 59
		TCCR0=0;
     778:	13 be       	out	0x33, r1	; 51
		state=3;
     77a:	83 e0       	ldi	r24, 0x03	; 3
     77c:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <state>
	}
}
     780:	8f 91       	pop	r24
     782:	0f 90       	pop	r0
     784:	0f be       	out	0x3f, r0	; 63
     786:	0f 90       	pop	r0
     788:	1f 90       	pop	r1
     78a:	18 95       	reti

0000078c <__vector_11>:

ISR(TIMER0_OVF_vect)
{
     78c:	1f 92       	push	r1
     78e:	0f 92       	push	r0
     790:	0f b6       	in	r0, 0x3f	; 63
     792:	0f 92       	push	r0
     794:	11 24       	eor	r1, r1
     796:	8f 93       	push	r24
	count++;
     798:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <count>
     79c:	8f 5f       	subi	r24, 0xFF	; 255
     79e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <count>
     7a2:	8f 91       	pop	r24
     7a4:	0f 90       	pop	r0
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	0f 90       	pop	r0
     7aa:	1f 90       	pop	r1
     7ac:	18 95       	reti

000007ae <main>:
char string2[10];
char string3[10];
int main(void)
{
	float Rd,Md,Ld,Sl,Sm,Sr;
	servo_init();
     7ae:	0e 94 14 02 	call	0x428	; 0x428 <servo_init>
	US_Init();
     7b2:	0e 94 65 03 	call	0x6ca	; 0x6ca <US_Init>
	LCD_Init();
     7b6:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_Init>
	MOTOR_init();
     7ba:	0e 94 c6 00 	call	0x18c	; 0x18c <MOTOR_init>
	
	//WELCOME MASSEGE
	LCD_WriteString("HELLO");
     7be:	82 e6       	ldi	r24, 0x62	; 98
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7c6:	2f ef       	ldi	r18, 0xFF	; 255
     7c8:	89 e6       	ldi	r24, 0x69	; 105
     7ca:	98 e1       	ldi	r25, 0x18	; 24
     7cc:	21 50       	subi	r18, 0x01	; 1
     7ce:	80 40       	sbci	r24, 0x00	; 0
     7d0:	90 40       	sbci	r25, 0x00	; 0
     7d2:	e1 f7       	brne	.-8      	; 0x7cc <main+0x1e>
     7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <main+0x28>
     7d6:	00 00       	nop
	_delay_ms(500);
	LCD_Clear();
     7d8:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
	LCD_WriteString("AUTOUNMOUS CAR");
     7dc:	88 e6       	ldi	r24, 0x68	; 104
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
	LCD_WriteAtPosition(2,1);
     7e4:	61 e0       	ldi	r22, 0x01	; 1
     7e6:	82 e0       	ldi	r24, 0x02	; 2
     7e8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCD_WriteAtPosition>
	LCD_WriteString("SYSTEM");
     7ec:	87 e7       	ldi	r24, 0x77	; 119
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
     7f4:	2f ef       	ldi	r18, 0xFF	; 255
     7f6:	89 e6       	ldi	r24, 0x69	; 105
     7f8:	98 e1       	ldi	r25, 0x18	; 24
     7fa:	21 50       	subi	r18, 0x01	; 1
     7fc:	80 40       	sbci	r24, 0x00	; 0
     7fe:	90 40       	sbci	r25, 0x00	; 0
     800:	e1 f7       	brne	.-8      	; 0x7fa <main+0x4c>
     802:	00 c0       	rjmp	.+0      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     804:	00 00       	nop
	_delay_ms(500);
	LCD_Clear();
     806:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
	

    while (1) 
    {
		servo_90_anti_clkwise();
     80a:	0e 94 3e 02 	call	0x47c	; 0x47c <servo_90_anti_clkwise>
     80e:	2f ef       	ldi	r18, 0xFF	; 255
     810:	89 e6       	ldi	r24, 0x69	; 105
     812:	98 e1       	ldi	r25, 0x18	; 24
     814:	21 50       	subi	r18, 0x01	; 1
     816:	80 40       	sbci	r24, 0x00	; 0
     818:	90 40       	sbci	r25, 0x00	; 0
     81a:	e1 f7       	brne	.-8      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81e:	00 00       	nop
		_delay_ms(500);
		Ld=pulse();
     820:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     824:	2f ef       	ldi	r18, 0xFF	; 255
     826:	89 e6       	ldi	r24, 0x69	; 105
     828:	98 e1       	ldi	r25, 0x18	; 24
     82a:	21 50       	subi	r18, 0x01	; 1
     82c:	80 40       	sbci	r24, 0x00	; 0
     82e:	90 40       	sbci	r25, 0x00	; 0
     830:	e1 f7       	brne	.-8      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     832:	00 c0       	rjmp	.+0      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
     834:	00 00       	nop
		_delay_ms(500);
		servo_zero();
     836:	0e 94 4e 02 	call	0x49c	; 0x49c <servo_zero>
		Ld=pulse();
     83a:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     83e:	2b 01       	movw	r4, r22
     840:	3c 01       	movw	r6, r24
     842:	2f ef       	ldi	r18, 0xFF	; 255
     844:	89 e6       	ldi	r24, 0x69	; 105
     846:	98 e1       	ldi	r25, 0x18	; 24
     848:	21 50       	subi	r18, 0x01	; 1
     84a:	80 40       	sbci	r24, 0x00	; 0
     84c:	90 40       	sbci	r25, 0x00	; 0
     84e:	e1 f7       	brne	.-8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     850:	00 c0       	rjmp	.+0      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     852:	00 00       	nop
		
		_delay_ms(500);
		Md=pulse();
     854:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     858:	2f ef       	ldi	r18, 0xFF	; 255
     85a:	89 e6       	ldi	r24, 0x69	; 105
     85c:	98 e1       	ldi	r25, 0x18	; 24
     85e:	21 50       	subi	r18, 0x01	; 1
     860:	80 40       	sbci	r24, 0x00	; 0
     862:	90 40       	sbci	r25, 0x00	; 0
     864:	e1 f7       	brne	.-8      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     866:	00 c0       	rjmp	.+0      	; 0x868 <__stack+0x9>
     868:	00 00       	nop
		_delay_ms(500);
		Md=pulse();
     86a:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     86e:	6b 01       	movw	r12, r22
     870:	7c 01       	movw	r14, r24
     872:	2f ef       	ldi	r18, 0xFF	; 255
     874:	89 e6       	ldi	r24, 0x69	; 105
     876:	98 e1       	ldi	r25, 0x18	; 24
     878:	21 50       	subi	r18, 0x01	; 1
     87a:	80 40       	sbci	r24, 0x00	; 0
     87c:	90 40       	sbci	r25, 0x00	; 0
     87e:	e1 f7       	brne	.-8      	; 0x878 <__stack+0x19>
     880:	00 c0       	rjmp	.+0      	; 0x882 <__stack+0x23>
     882:	00 00       	nop
		_delay_ms(500);
		servo_90_clkwise();
     884:	0e 94 46 02 	call	0x48c	; 0x48c <servo_90_clkwise>
		Rd=pulse();
     888:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     88c:	2f ef       	ldi	r18, 0xFF	; 255
     88e:	89 e6       	ldi	r24, 0x69	; 105
     890:	98 e1       	ldi	r25, 0x18	; 24
     892:	21 50       	subi	r18, 0x01	; 1
     894:	80 40       	sbci	r24, 0x00	; 0
     896:	90 40       	sbci	r25, 0x00	; 0
     898:	e1 f7       	brne	.-8      	; 0x892 <__stack+0x33>
     89a:	00 c0       	rjmp	.+0      	; 0x89c <__stack+0x3d>
     89c:	00 00       	nop
		_delay_ms(500);
		Rd=pulse();
     89e:	0e 94 56 02 	call	0x4ac	; 0x4ac <pulse>
     8a2:	4b 01       	movw	r8, r22
     8a4:	5c 01       	movw	r10, r24
     8a6:	2f ef       	ldi	r18, 0xFF	; 255
     8a8:	89 e6       	ldi	r24, 0x69	; 105
     8aa:	98 e1       	ldi	r25, 0x18	; 24
     8ac:	21 50       	subi	r18, 0x01	; 1
     8ae:	80 40       	sbci	r24, 0x00	; 0
     8b0:	90 40       	sbci	r25, 0x00	; 0
     8b2:	e1 f7       	brne	.-8      	; 0x8ac <__stack+0x4d>
     8b4:	00 c0       	rjmp	.+0      	; 0x8b6 <__stack+0x57>
     8b6:	00 00       	nop
		_delay_ms(500);
	//	_delay_ms(50);
		dtostrf(Ld, 2, 2, string1);/* distance to string */
     8b8:	04 ee       	ldi	r16, 0xE4	; 228
     8ba:	10 e0       	ldi	r17, 0x00	; 0
     8bc:	22 e0       	ldi	r18, 0x02	; 2
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	42 e0       	ldi	r20, 0x02	; 2
     8c2:	50 e0       	ldi	r21, 0x00	; 0
     8c4:	c3 01       	movw	r24, r6
     8c6:	b2 01       	movw	r22, r4
     8c8:	0e 94 16 0a 	call	0x142c	; 0x142c <dtostrf>
		dtostrf(Md, 2, 2, string2);/* distance to string */
     8cc:	0a ed       	ldi	r16, 0xDA	; 218
     8ce:	10 e0       	ldi	r17, 0x00	; 0
     8d0:	22 e0       	ldi	r18, 0x02	; 2
     8d2:	30 e0       	ldi	r19, 0x00	; 0
     8d4:	42 e0       	ldi	r20, 0x02	; 2
     8d6:	50 e0       	ldi	r21, 0x00	; 0
     8d8:	c7 01       	movw	r24, r14
     8da:	b6 01       	movw	r22, r12
     8dc:	0e 94 16 0a 	call	0x142c	; 0x142c <dtostrf>
		dtostrf(Rd, 2, 2, string3);/* distance to string */
     8e0:	0e ee       	ldi	r16, 0xEE	; 238
     8e2:	10 e0       	ldi	r17, 0x00	; 0
     8e4:	22 e0       	ldi	r18, 0x02	; 2
     8e6:	30 e0       	ldi	r19, 0x00	; 0
     8e8:	42 e0       	ldi	r20, 0x02	; 2
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	c5 01       	movw	r24, r10
     8ee:	b4 01       	movw	r22, r8
     8f0:	0e 94 16 0a 	call	0x142c	; 0x142c <dtostrf>
		LCD_WriteString("L dist= ");
     8f4:	8e e7       	ldi	r24, 0x7E	; 126
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
		LCD_WriteString(string1);
     8fc:	84 ee       	ldi	r24, 0xE4	; 228
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
     904:	2f ef       	ldi	r18, 0xFF	; 255
     906:	83 ed       	ldi	r24, 0xD3	; 211
     908:	90 e3       	ldi	r25, 0x30	; 48
     90a:	21 50       	subi	r18, 0x01	; 1
     90c:	80 40       	sbci	r24, 0x00	; 0
     90e:	90 40       	sbci	r25, 0x00	; 0
     910:	e1 f7       	brne	.-8      	; 0x90a <__stack+0xab>
     912:	00 c0       	rjmp	.+0      	; 0x914 <__stack+0xb5>
     914:	00 00       	nop
		_delay_ms(1000);
		LCD_Clear();
     916:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     91a:	2f ef       	ldi	r18, 0xFF	; 255
     91c:	80 e7       	ldi	r24, 0x70	; 112
     91e:	92 e0       	ldi	r25, 0x02	; 2
     920:	21 50       	subi	r18, 0x01	; 1
     922:	80 40       	sbci	r24, 0x00	; 0
     924:	90 40       	sbci	r25, 0x00	; 0
     926:	e1 f7       	brne	.-8      	; 0x920 <__stack+0xc1>
     928:	00 c0       	rjmp	.+0      	; 0x92a <__stack+0xcb>
     92a:	00 00       	nop
		_delay_ms(50);
					
		LCD_WriteString("mid dist= ");
     92c:	87 e8       	ldi	r24, 0x87	; 135
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
		LCD_WriteString(string2);
     934:	8a ed       	ldi	r24, 0xDA	; 218
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
     93c:	2f ef       	ldi	r18, 0xFF	; 255
     93e:	83 ed       	ldi	r24, 0xD3	; 211
     940:	90 e3       	ldi	r25, 0x30	; 48
     942:	21 50       	subi	r18, 0x01	; 1
     944:	80 40       	sbci	r24, 0x00	; 0
     946:	90 40       	sbci	r25, 0x00	; 0
     948:	e1 f7       	brne	.-8      	; 0x942 <__stack+0xe3>
     94a:	00 c0       	rjmp	.+0      	; 0x94c <__stack+0xed>
     94c:	00 00       	nop
		_delay_ms(1000);
		LCD_Clear();
     94e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     952:	2f ef       	ldi	r18, 0xFF	; 255
     954:	80 e7       	ldi	r24, 0x70	; 112
     956:	92 e0       	ldi	r25, 0x02	; 2
     958:	21 50       	subi	r18, 0x01	; 1
     95a:	80 40       	sbci	r24, 0x00	; 0
     95c:	90 40       	sbci	r25, 0x00	; 0
     95e:	e1 f7       	brne	.-8      	; 0x958 <__stack+0xf9>
     960:	00 c0       	rjmp	.+0      	; 0x962 <__stack+0x103>
     962:	00 00       	nop
		_delay_ms(50);
					
		LCD_WriteString("R dist= ");
     964:	82 e9       	ldi	r24, 0x92	; 146
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
		LCD_WriteString(string3);
     96c:	c8 01       	movw	r24, r16
     96e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
     972:	2f ef       	ldi	r18, 0xFF	; 255
     974:	83 ed       	ldi	r24, 0xD3	; 211
     976:	90 e3       	ldi	r25, 0x30	; 48
     978:	21 50       	subi	r18, 0x01	; 1
     97a:	80 40       	sbci	r24, 0x00	; 0
     97c:	90 40       	sbci	r25, 0x00	; 0
     97e:	e1 f7       	brne	.-8      	; 0x978 <__stack+0x119>
     980:	00 c0       	rjmp	.+0      	; 0x982 <__stack+0x123>
     982:	00 00       	nop
		_delay_ms(1000);
		LCD_Clear();
     984:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     988:	2f ef       	ldi	r18, 0xFF	; 255
     98a:	80 e7       	ldi	r24, 0x70	; 112
     98c:	92 e0       	ldi	r25, 0x02	; 2
     98e:	21 50       	subi	r18, 0x01	; 1
     990:	80 40       	sbci	r24, 0x00	; 0
     992:	90 40       	sbci	r25, 0x00	; 0
     994:	e1 f7       	brne	.-8      	; 0x98e <__stack+0x12f>
     996:	00 c0       	rjmp	.+0      	; 0x998 <__stack+0x139>
     998:	00 00       	nop
		_delay_ms(50);
		Sl=Sl+Ld;
     99a:	20 e0       	ldi	r18, 0x00	; 0
     99c:	30 e0       	ldi	r19, 0x00	; 0
     99e:	a9 01       	movw	r20, r18
     9a0:	c3 01       	movw	r24, r6
     9a2:	b2 01       	movw	r22, r4
     9a4:	0e 94 b8 07 	call	0xf70	; 0xf70 <__addsf3>
     9a8:	2b 01       	movw	r4, r22
     9aa:	3c 01       	movw	r6, r24
		Sm=Sm+Md;
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	a9 01       	movw	r20, r18
     9b2:	c7 01       	movw	r24, r14
     9b4:	b6 01       	movw	r22, r12
     9b6:	0e 94 b8 07 	call	0xf70	; 0xf70 <__addsf3>
     9ba:	6b 01       	movw	r12, r22
     9bc:	7c 01       	movw	r14, r24
		Sr=Sr+Rd;
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	a9 01       	movw	r20, r18
     9c4:	c5 01       	movw	r24, r10
     9c6:	b4 01       	movw	r22, r8
     9c8:	0e 94 b8 07 	call	0xf70	; 0xf70 <__addsf3>
     9cc:	4b 01       	movw	r8, r22
     9ce:	5c 01       	movw	r10, r24

		if ((Sm>=Sr)&&(Sm>=Sl)&&Sm>=10)
     9d0:	9b 01       	movw	r18, r22
     9d2:	ac 01       	movw	r20, r24
     9d4:	c7 01       	movw	r24, r14
     9d6:	b6 01       	movw	r22, r12
     9d8:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     9dc:	88 23       	and	r24, r24
     9de:	7c f1       	brlt	.+94     	; 0xa3e <__stack+0x1df>
     9e0:	a7 01       	movw	r20, r14
     9e2:	96 01       	movw	r18, r12
     9e4:	c3 01       	movw	r24, r6
     9e6:	b2 01       	movw	r22, r4
     9e8:	0e 94 24 08 	call	0x1048	; 0x1048 <__cmpsf2>
     9ec:	18 16       	cp	r1, r24
     9ee:	3c f1       	brlt	.+78     	; 0xa3e <__stack+0x1df>
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	40 e2       	ldi	r20, 0x20	; 32
     9f6:	51 e4       	ldi	r21, 0x41	; 65
     9f8:	c7 01       	movw	r24, r14
     9fa:	b6 01       	movw	r22, r12
     9fc:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     a00:	88 23       	and	r24, r24
     a02:	ec f0       	brlt	.+58     	; 0xa3e <__stack+0x1df>
		{
			//GO FOWRARD
			//LCD "FOWRARD"
			LCD_Clear();
     a04:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     a08:	2f ef       	ldi	r18, 0xFF	; 255
     a0a:	80 e7       	ldi	r24, 0x70	; 112
     a0c:	92 e0       	ldi	r25, 0x02	; 2
     a0e:	21 50       	subi	r18, 0x01	; 1
     a10:	80 40       	sbci	r24, 0x00	; 0
     a12:	90 40       	sbci	r25, 0x00	; 0
     a14:	e1 f7       	brne	.-8      	; 0xa0e <__stack+0x1af>
     a16:	00 c0       	rjmp	.+0      	; 0xa18 <__stack+0x1b9>
     a18:	00 00       	nop
			_delay_ms(50);
			LCD_WriteString("GO FOWRARD");
     a1a:	8b e9       	ldi	r24, 0x9B	; 155
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
			FORWAED();
     a22:	0e 94 db 00 	call	0x1b6	; 0x1b6 <FORWAED>
     a26:	2f ef       	ldi	r18, 0xFF	; 255
     a28:	89 e6       	ldi	r24, 0x69	; 105
     a2a:	98 e1       	ldi	r25, 0x18	; 24
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	80 40       	sbci	r24, 0x00	; 0
     a30:	90 40       	sbci	r25, 0x00	; 0
     a32:	e1 f7       	brne	.-8      	; 0xa2c <__stack+0x1cd>
     a34:	00 c0       	rjmp	.+0      	; 0xa36 <__stack+0x1d7>
     a36:	00 00       	nop
			_delay_ms(500);
			LCD_Clear();
     a38:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     a3c:	e6 ce       	rjmp	.-564    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
		}
		else if ((Sr>=Sm)&&(Sr>=Sl)&&Sm>=10)
     a3e:	a5 01       	movw	r20, r10
     a40:	94 01       	movw	r18, r8
     a42:	c7 01       	movw	r24, r14
     a44:	b6 01       	movw	r22, r12
     a46:	0e 94 24 08 	call	0x1048	; 0x1048 <__cmpsf2>
     a4a:	18 16       	cp	r1, r24
     a4c:	7c f1       	brlt	.+94     	; 0xaac <__stack+0x24d>
     a4e:	a5 01       	movw	r20, r10
     a50:	94 01       	movw	r18, r8
     a52:	c3 01       	movw	r24, r6
     a54:	b2 01       	movw	r22, r4
     a56:	0e 94 24 08 	call	0x1048	; 0x1048 <__cmpsf2>
     a5a:	18 16       	cp	r1, r24
     a5c:	3c f1       	brlt	.+78     	; 0xaac <__stack+0x24d>
     a5e:	20 e0       	ldi	r18, 0x00	; 0
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	40 e2       	ldi	r20, 0x20	; 32
     a64:	51 e4       	ldi	r21, 0x41	; 65
     a66:	c7 01       	movw	r24, r14
     a68:	b6 01       	movw	r22, r12
     a6a:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     a6e:	88 23       	and	r24, r24
     a70:	ec f0       	brlt	.+58     	; 0xaac <__stack+0x24d>
		{
			//GO RIGHT
			//LCD "RIGHT"
			LCD_Clear();
     a72:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     a76:	2f ef       	ldi	r18, 0xFF	; 255
     a78:	80 e7       	ldi	r24, 0x70	; 112
     a7a:	92 e0       	ldi	r25, 0x02	; 2
     a7c:	21 50       	subi	r18, 0x01	; 1
     a7e:	80 40       	sbci	r24, 0x00	; 0
     a80:	90 40       	sbci	r25, 0x00	; 0
     a82:	e1 f7       	brne	.-8      	; 0xa7c <__stack+0x21d>
     a84:	00 c0       	rjmp	.+0      	; 0xa86 <__stack+0x227>
     a86:	00 00       	nop
			_delay_ms(50);
			LCD_WriteString("TURN RIGHT");
     a88:	86 ea       	ldi	r24, 0xA6	; 166
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
			RIGHT();
     a90:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <RIGHT>
     a94:	2f ef       	ldi	r18, 0xFF	; 255
     a96:	89 e6       	ldi	r24, 0x69	; 105
     a98:	98 e1       	ldi	r25, 0x18	; 24
     a9a:	21 50       	subi	r18, 0x01	; 1
     a9c:	80 40       	sbci	r24, 0x00	; 0
     a9e:	90 40       	sbci	r25, 0x00	; 0
     aa0:	e1 f7       	brne	.-8      	; 0xa9a <__stack+0x23b>
     aa2:	00 c0       	rjmp	.+0      	; 0xaa4 <__stack+0x245>
     aa4:	00 00       	nop
			_delay_ms(500);
			LCD_Clear();
     aa6:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     aaa:	af ce       	rjmp	.-674    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
		}
		else if ((Sl>=Sm)&&(Sl>=Sr)&&Sl>=10)
     aac:	a7 01       	movw	r20, r14
     aae:	96 01       	movw	r18, r12
     ab0:	c3 01       	movw	r24, r6
     ab2:	b2 01       	movw	r22, r4
     ab4:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     ab8:	88 23       	and	r24, r24
     aba:	0c f4       	brge	.+2      	; 0xabe <__stack+0x25f>
     abc:	a6 ce       	rjmp	.-692    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     abe:	a5 01       	movw	r20, r10
     ac0:	94 01       	movw	r18, r8
     ac2:	c3 01       	movw	r24, r6
     ac4:	b2 01       	movw	r22, r4
     ac6:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     aca:	88 23       	and	r24, r24
     acc:	0c f4       	brge	.+2      	; 0xad0 <__stack+0x271>
     ace:	9d ce       	rjmp	.-710    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e2       	ldi	r20, 0x20	; 32
     ad6:	51 e4       	ldi	r21, 0x41	; 65
     ad8:	c3 01       	movw	r24, r6
     ada:	b2 01       	movw	r22, r4
     adc:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__gesf2>
     ae0:	88 23       	and	r24, r24
     ae2:	0c f4       	brge	.+2      	; 0xae6 <__stack+0x287>
     ae4:	92 ce       	rjmp	.-732    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
		{
			//GO LEFT
			//LCD "LEFT"
			LCD_Clear();
     ae6:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     aea:	2f ef       	ldi	r18, 0xFF	; 255
     aec:	80 e7       	ldi	r24, 0x70	; 112
     aee:	92 e0       	ldi	r25, 0x02	; 2
     af0:	21 50       	subi	r18, 0x01	; 1
     af2:	80 40       	sbci	r24, 0x00	; 0
     af4:	90 40       	sbci	r25, 0x00	; 0
     af6:	e1 f7       	brne	.-8      	; 0xaf0 <__stack+0x291>
     af8:	00 c0       	rjmp	.+0      	; 0xafa <__stack+0x29b>
     afa:	00 00       	nop
			_delay_ms(50);
			LCD_WriteString("TURN LEFT");
     afc:	81 eb       	ldi	r24, 0xB1	; 177
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_WriteString>
			LEFT();
     b04:	0e 94 fd 00 	call	0x1fa	; 0x1fa <LEFT>
     b08:	2f ef       	ldi	r18, 0xFF	; 255
     b0a:	89 e6       	ldi	r24, 0x69	; 105
     b0c:	98 e1       	ldi	r25, 0x18	; 24
     b0e:	21 50       	subi	r18, 0x01	; 1
     b10:	80 40       	sbci	r24, 0x00	; 0
     b12:	90 40       	sbci	r25, 0x00	; 0
     b14:	e1 f7       	brne	.-8      	; 0xb0e <__stack+0x2af>
     b16:	00 c0       	rjmp	.+0      	; 0xb18 <__stack+0x2b9>
     b18:	00 00       	nop
			_delay_ms(500);
			LCD_Clear();
     b1a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <LCD_Clear>
     b1e:	75 ce       	rjmp	.-790    	; 0x80a <__DATA_REGION_LENGTH__+0xa>

00000b20 <DIO_SetDir>:
			var =get_bit(PIND  , pinNumber);
		}
		
		return var;
	
}
     b20:	41 30       	cpi	r20, 0x01	; 1
     b22:	a9 f5       	brne	.+106    	; 0xb8e <DIO_SetDir+0x6e>
     b24:	81 11       	cpse	r24, r1
     b26:	0b c0       	rjmp	.+22     	; 0xb3e <DIO_SetDir+0x1e>
     b28:	2a b3       	in	r18, 0x1a	; 26
     b2a:	81 e0       	ldi	r24, 0x01	; 1
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <DIO_SetDir+0x14>
     b30:	88 0f       	add	r24, r24
     b32:	99 1f       	adc	r25, r25
     b34:	6a 95       	dec	r22
     b36:	e2 f7       	brpl	.-8      	; 0xb30 <DIO_SetDir+0x10>
     b38:	82 2b       	or	r24, r18
     b3a:	8a bb       	out	0x1a, r24	; 26
     b3c:	08 95       	ret
     b3e:	81 30       	cpi	r24, 0x01	; 1
     b40:	59 f4       	brne	.+22     	; 0xb58 <DIO_SetDir+0x38>
     b42:	27 b3       	in	r18, 0x17	; 23
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	02 c0       	rjmp	.+4      	; 0xb4e <DIO_SetDir+0x2e>
     b4a:	88 0f       	add	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	6a 95       	dec	r22
     b50:	e2 f7       	brpl	.-8      	; 0xb4a <DIO_SetDir+0x2a>
     b52:	82 2b       	or	r24, r18
     b54:	87 bb       	out	0x17, r24	; 23
     b56:	08 95       	ret
     b58:	82 30       	cpi	r24, 0x02	; 2
     b5a:	59 f4       	brne	.+22     	; 0xb72 <DIO_SetDir+0x52>
     b5c:	24 b3       	in	r18, 0x14	; 20
     b5e:	81 e0       	ldi	r24, 0x01	; 1
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <DIO_SetDir+0x48>
     b64:	88 0f       	add	r24, r24
     b66:	99 1f       	adc	r25, r25
     b68:	6a 95       	dec	r22
     b6a:	e2 f7       	brpl	.-8      	; 0xb64 <DIO_SetDir+0x44>
     b6c:	82 2b       	or	r24, r18
     b6e:	84 bb       	out	0x14, r24	; 20
     b70:	08 95       	ret
     b72:	83 30       	cpi	r24, 0x03	; 3
     b74:	09 f0       	breq	.+2      	; 0xb78 <DIO_SetDir+0x58>
     b76:	44 c0       	rjmp	.+136    	; 0xc00 <DIO_SetDir+0xe0>
     b78:	21 b3       	in	r18, 0x11	; 17
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <DIO_SetDir+0x64>
     b80:	88 0f       	add	r24, r24
     b82:	99 1f       	adc	r25, r25
     b84:	6a 95       	dec	r22
     b86:	e2 f7       	brpl	.-8      	; 0xb80 <DIO_SetDir+0x60>
     b88:	82 2b       	or	r24, r18
     b8a:	81 bb       	out	0x11, r24	; 17
     b8c:	08 95       	ret
     b8e:	41 11       	cpse	r20, r1
     b90:	37 c0       	rjmp	.+110    	; 0xc00 <DIO_SetDir+0xe0>
     b92:	81 11       	cpse	r24, r1
     b94:	0c c0       	rjmp	.+24     	; 0xbae <DIO_SetDir+0x8e>
     b96:	2a b3       	in	r18, 0x1a	; 26
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <DIO_SetDir+0x82>
     b9e:	88 0f       	add	r24, r24
     ba0:	99 1f       	adc	r25, r25
     ba2:	6a 95       	dec	r22
     ba4:	e2 f7       	brpl	.-8      	; 0xb9e <DIO_SetDir+0x7e>
     ba6:	80 95       	com	r24
     ba8:	82 23       	and	r24, r18
     baa:	8a bb       	out	0x1a, r24	; 26
     bac:	08 95       	ret
     bae:	81 30       	cpi	r24, 0x01	; 1
     bb0:	61 f4       	brne	.+24     	; 0xbca <DIO_SetDir+0xaa>
     bb2:	27 b3       	in	r18, 0x17	; 23
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <DIO_SetDir+0x9e>
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	6a 95       	dec	r22
     bc0:	e2 f7       	brpl	.-8      	; 0xbba <DIO_SetDir+0x9a>
     bc2:	80 95       	com	r24
     bc4:	82 23       	and	r24, r18
     bc6:	87 bb       	out	0x17, r24	; 23
     bc8:	08 95       	ret
     bca:	82 30       	cpi	r24, 0x02	; 2
     bcc:	61 f4       	brne	.+24     	; 0xbe6 <DIO_SetDir+0xc6>
     bce:	24 b3       	in	r18, 0x14	; 20
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <DIO_SetDir+0xba>
     bd6:	88 0f       	add	r24, r24
     bd8:	99 1f       	adc	r25, r25
     bda:	6a 95       	dec	r22
     bdc:	e2 f7       	brpl	.-8      	; 0xbd6 <DIO_SetDir+0xb6>
     bde:	80 95       	com	r24
     be0:	82 23       	and	r24, r18
     be2:	84 bb       	out	0x14, r24	; 20
     be4:	08 95       	ret
     be6:	83 30       	cpi	r24, 0x03	; 3
     be8:	59 f4       	brne	.+22     	; 0xc00 <DIO_SetDir+0xe0>
     bea:	21 b3       	in	r18, 0x11	; 17
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <DIO_SetDir+0xd6>
     bf2:	88 0f       	add	r24, r24
     bf4:	99 1f       	adc	r25, r25
     bf6:	6a 95       	dec	r22
     bf8:	e2 f7       	brpl	.-8      	; 0xbf2 <DIO_SetDir+0xd2>
     bfa:	80 95       	com	r24
     bfc:	82 23       	and	r24, r18
     bfe:	81 bb       	out	0x11, r24	; 17
     c00:	08 95       	ret

00000c02 <DIO_SetHigh>:

void DIO_SetHigh( DIO_PORT_en portNUmber , DIO_PIN_en pinNumber )
{
	if( portNUmber == PORT_A)
     c02:	81 11       	cpse	r24, r1
     c04:	0b c0       	rjmp	.+22     	; 0xc1c <DIO_SetHigh+0x1a>
	{
		set_bit(PORTA , pinNumber);
     c06:	2b b3       	in	r18, 0x1b	; 27
     c08:	81 e0       	ldi	r24, 0x01	; 1
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <DIO_SetHigh+0x10>
     c0e:	88 0f       	add	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	6a 95       	dec	r22
     c14:	e2 f7       	brpl	.-8      	; 0xc0e <DIO_SetHigh+0xc>
     c16:	82 2b       	or	r24, r18
     c18:	8b bb       	out	0x1b, r24	; 27
     c1a:	08 95       	ret
	}
	else if( portNUmber == PORT_B)
     c1c:	81 30       	cpi	r24, 0x01	; 1
     c1e:	59 f4       	brne	.+22     	; 0xc36 <DIO_SetHigh+0x34>
	{
		set_bit(PORTB  , pinNumber);
     c20:	28 b3       	in	r18, 0x18	; 24
     c22:	81 e0       	ldi	r24, 0x01	; 1
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <DIO_SetHigh+0x2a>
     c28:	88 0f       	add	r24, r24
     c2a:	99 1f       	adc	r25, r25
     c2c:	6a 95       	dec	r22
     c2e:	e2 f7       	brpl	.-8      	; 0xc28 <DIO_SetHigh+0x26>
     c30:	82 2b       	or	r24, r18
     c32:	88 bb       	out	0x18, r24	; 24
     c34:	08 95       	ret
	}
	else if( portNUmber == PORT_C)
     c36:	82 30       	cpi	r24, 0x02	; 2
     c38:	59 f4       	brne	.+22     	; 0xc50 <DIO_SetHigh+0x4e>
	{
		set_bit(PORTC  , pinNumber);
     c3a:	25 b3       	in	r18, 0x15	; 21
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	02 c0       	rjmp	.+4      	; 0xc46 <DIO_SetHigh+0x44>
     c42:	88 0f       	add	r24, r24
     c44:	99 1f       	adc	r25, r25
     c46:	6a 95       	dec	r22
     c48:	e2 f7       	brpl	.-8      	; 0xc42 <DIO_SetHigh+0x40>
     c4a:	82 2b       	or	r24, r18
     c4c:	85 bb       	out	0x15, r24	; 21
     c4e:	08 95       	ret
	}
	else if( portNUmber == PORT_D)
     c50:	83 30       	cpi	r24, 0x03	; 3
     c52:	51 f4       	brne	.+20     	; 0xc68 <DIO_SetHigh+0x66>
	{
		set_bit(PORTD  , pinNumber);
     c54:	22 b3       	in	r18, 0x12	; 18
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <DIO_SetHigh+0x5e>
     c5c:	88 0f       	add	r24, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	6a 95       	dec	r22
     c62:	e2 f7       	brpl	.-8      	; 0xc5c <DIO_SetHigh+0x5a>
     c64:	82 2b       	or	r24, r18
     c66:	82 bb       	out	0x12, r24	; 18
     c68:	08 95       	ret

00000c6a <DIO_SetLow>:
	
}

void DIO_SetLow( DIO_PORT_en portNUmber , DIO_PIN_en pinNumber )
{
		if( portNUmber == PORT_A)
     c6a:	81 11       	cpse	r24, r1
     c6c:	0c c0       	rjmp	.+24     	; 0xc86 <DIO_SetLow+0x1c>
		{
			clr_bit(PORTA , pinNumber);
     c6e:	2b b3       	in	r18, 0x1b	; 27
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <DIO_SetLow+0x10>
     c76:	88 0f       	add	r24, r24
     c78:	99 1f       	adc	r25, r25
     c7a:	6a 95       	dec	r22
     c7c:	e2 f7       	brpl	.-8      	; 0xc76 <DIO_SetLow+0xc>
     c7e:	80 95       	com	r24
     c80:	82 23       	and	r24, r18
     c82:	8b bb       	out	0x1b, r24	; 27
     c84:	08 95       	ret
		}
		else if( portNUmber == PORT_B)
     c86:	81 30       	cpi	r24, 0x01	; 1
     c88:	61 f4       	brne	.+24     	; 0xca2 <DIO_SetLow+0x38>
		{
			clr_bit(PORTB  , pinNumber);
     c8a:	28 b3       	in	r18, 0x18	; 24
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <DIO_SetLow+0x2c>
     c92:	88 0f       	add	r24, r24
     c94:	99 1f       	adc	r25, r25
     c96:	6a 95       	dec	r22
     c98:	e2 f7       	brpl	.-8      	; 0xc92 <DIO_SetLow+0x28>
     c9a:	80 95       	com	r24
     c9c:	82 23       	and	r24, r18
     c9e:	88 bb       	out	0x18, r24	; 24
     ca0:	08 95       	ret
		}
		else if( portNUmber == PORT_C)
     ca2:	82 30       	cpi	r24, 0x02	; 2
     ca4:	61 f4       	brne	.+24     	; 0xcbe <DIO_SetLow+0x54>
		{
			clr_bit(PORTC  , pinNumber);
     ca6:	25 b3       	in	r18, 0x15	; 21
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <DIO_SetLow+0x48>
     cae:	88 0f       	add	r24, r24
     cb0:	99 1f       	adc	r25, r25
     cb2:	6a 95       	dec	r22
     cb4:	e2 f7       	brpl	.-8      	; 0xcae <DIO_SetLow+0x44>
     cb6:	80 95       	com	r24
     cb8:	82 23       	and	r24, r18
     cba:	85 bb       	out	0x15, r24	; 21
     cbc:	08 95       	ret
		}
		else if( portNUmber == PORT_D)
     cbe:	83 30       	cpi	r24, 0x03	; 3
     cc0:	59 f4       	brne	.+22     	; 0xcd8 <DIO_SetLow+0x6e>
		{
			clr_bit(PORTD  , pinNumber);
     cc2:	22 b3       	in	r18, 0x12	; 18
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <DIO_SetLow+0x64>
     cca:	88 0f       	add	r24, r24
     ccc:	99 1f       	adc	r25, r25
     cce:	6a 95       	dec	r22
     cd0:	e2 f7       	brpl	.-8      	; 0xcca <DIO_SetLow+0x60>
     cd2:	80 95       	com	r24
     cd4:	82 23       	and	r24, r18
     cd6:	82 bb       	out	0x12, r24	; 18
     cd8:	08 95       	ret

00000cda <TIMER_Init>:
			break;
		}

		case TIMER2 :
		{
		   TCNT2 =(uint8)value ;
     cda:	0f 93       	push	r16
     cdc:	1f 93       	push	r17
     cde:	cf 93       	push	r28
     ce0:	df 93       	push	r29
     ce2:	cd b7       	in	r28, 0x3d	; 61
     ce4:	de b7       	in	r29, 0x3e	; 62
     ce6:	29 97       	sbiw	r28, 0x09	; 9
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	de bf       	out	0x3e, r29	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	cd bf       	out	0x3d, r28	; 61
     cf2:	09 83       	std	Y+1, r16	; 0x01
     cf4:	1a 83       	std	Y+2, r17	; 0x02
     cf6:	2b 83       	std	Y+3, r18	; 0x03
     cf8:	3c 83       	std	Y+4, r19	; 0x04
     cfa:	4d 83       	std	Y+5, r20	; 0x05
     cfc:	5e 83       	std	Y+6, r21	; 0x06
     cfe:	6f 83       	std	Y+7, r22	; 0x07
     d00:	78 87       	std	Y+8, r23	; 0x08
     d02:	89 87       	std	Y+9, r24	; 0x09
     d04:	01 30       	cpi	r16, 0x01	; 1
     d06:	09 f4       	brne	.+2      	; 0xd0a <TIMER_Init+0x30>
     d08:	41 c0       	rjmp	.+130    	; 0xd8c <TIMER_Init+0xb2>
     d0a:	20 f0       	brcs	.+8      	; 0xd14 <TIMER_Init+0x3a>
     d0c:	02 30       	cpi	r16, 0x02	; 2
     d0e:	09 f4       	brne	.+2      	; 0xd12 <TIMER_Init+0x38>
     d10:	d3 c0       	rjmp	.+422    	; 0xeb8 <TIMER_Init+0x1de>
     d12:	0d c1       	rjmp	.+538    	; 0xf2e <TIMER_Init+0x254>
     d14:	29 b7       	in	r18, 0x39	; 57
     d16:	3f 81       	ldd	r19, Y+7	; 0x07
     d18:	98 85       	ldd	r25, Y+8	; 0x08
     d1a:	89 2f       	mov	r24, r25
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	88 0f       	add	r24, r24
     d20:	99 1f       	adc	r25, r25
     d22:	83 2b       	or	r24, r19
     d24:	82 2b       	or	r24, r18
     d26:	89 bf       	out	0x39, r24	; 57
     d28:	8f 81       	ldd	r24, Y+7	; 0x07
     d2a:	81 11       	cpse	r24, r1
     d2c:	03 c0       	rjmp	.+6      	; 0xd34 <TIMER_Init+0x5a>
     d2e:	88 85       	ldd	r24, Y+8	; 0x08
     d30:	88 23       	and	r24, r24
     d32:	19 f0       	breq	.+6      	; 0xd3a <TIMER_Init+0x60>
     d34:	8f b7       	in	r24, 0x3f	; 63
     d36:	80 68       	ori	r24, 0x80	; 128
     d38:	8f bf       	out	0x3f, r24	; 63
     d3a:	83 b7       	in	r24, 0x33	; 51
     d3c:	8f 7b       	andi	r24, 0xBF	; 191
     d3e:	83 bf       	out	0x33, r24	; 51
     d40:	8b 81       	ldd	r24, Y+3	; 0x03
     d42:	81 30       	cpi	r24, 0x01	; 1
     d44:	69 f0       	breq	.+26     	; 0xd60 <TIMER_Init+0x86>
     d46:	28 f0       	brcs	.+10     	; 0xd52 <TIMER_Init+0x78>
     d48:	82 30       	cpi	r24, 0x02	; 2
     d4a:	71 f0       	breq	.+28     	; 0xd68 <TIMER_Init+0x8e>
     d4c:	83 30       	cpi	r24, 0x03	; 3
     d4e:	81 f0       	breq	.+32     	; 0xd70 <TIMER_Init+0x96>
     d50:	12 c0       	rjmp	.+36     	; 0xd76 <TIMER_Init+0x9c>
     d52:	83 b7       	in	r24, 0x33	; 51
     d54:	8f 7b       	andi	r24, 0xBF	; 191
     d56:	83 bf       	out	0x33, r24	; 51
     d58:	83 b7       	in	r24, 0x33	; 51
     d5a:	87 7f       	andi	r24, 0xF7	; 247
     d5c:	83 bf       	out	0x33, r24	; 51
     d5e:	0b c0       	rjmp	.+22     	; 0xd76 <TIMER_Init+0x9c>
     d60:	83 b7       	in	r24, 0x33	; 51
     d62:	88 60       	ori	r24, 0x08	; 8
     d64:	83 bf       	out	0x33, r24	; 51
     d66:	07 c0       	rjmp	.+14     	; 0xd76 <TIMER_Init+0x9c>
     d68:	83 b7       	in	r24, 0x33	; 51
     d6a:	88 64       	ori	r24, 0x48	; 72
     d6c:	83 bf       	out	0x33, r24	; 51
     d6e:	03 c0       	rjmp	.+6      	; 0xd76 <TIMER_Init+0x9c>
     d70:	83 b7       	in	r24, 0x33	; 51
     d72:	80 64       	ori	r24, 0x40	; 64
     d74:	83 bf       	out	0x33, r24	; 51
     d76:	23 b7       	in	r18, 0x33	; 51
     d78:	3e 81       	ldd	r19, Y+6	; 0x06
     d7a:	9d 81       	ldd	r25, Y+5	; 0x05
     d7c:	40 e1       	ldi	r20, 0x10	; 16
     d7e:	94 9f       	mul	r25, r20
     d80:	c0 01       	movw	r24, r0
     d82:	11 24       	eor	r1, r1
     d84:	83 2b       	or	r24, r19
     d86:	82 2b       	or	r24, r18
     d88:	83 bf       	out	0x33, r24	; 51
     d8a:	d1 c0       	rjmp	.+418    	; 0xf2e <TIMER_Init+0x254>
     d8c:	49 b7       	in	r20, 0x39	; 57
     d8e:	2f 81       	ldd	r18, Y+7	; 0x07
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	22 0f       	add	r18, r18
     d94:	33 1f       	adc	r19, r19
     d96:	22 0f       	add	r18, r18
     d98:	33 1f       	adc	r19, r19
     d9a:	99 85       	ldd	r25, Y+9	; 0x09
     d9c:	50 e2       	ldi	r21, 0x20	; 32
     d9e:	95 9f       	mul	r25, r21
     da0:	c0 01       	movw	r24, r0
     da2:	11 24       	eor	r1, r1
     da4:	82 2b       	or	r24, r18
     da6:	84 2b       	or	r24, r20
     da8:	89 bf       	out	0x39, r24	; 57
     daa:	8f 81       	ldd	r24, Y+7	; 0x07
     dac:	81 11       	cpse	r24, r1
     dae:	03 c0       	rjmp	.+6      	; 0xdb6 <TIMER_Init+0xdc>
     db0:	89 85       	ldd	r24, Y+9	; 0x09
     db2:	88 23       	and	r24, r24
     db4:	19 f0       	breq	.+6      	; 0xdbc <TIMER_Init+0xe2>
     db6:	8f b7       	in	r24, 0x3f	; 63
     db8:	80 68       	ori	r24, 0x80	; 128
     dba:	8f bf       	out	0x3f, r24	; 63
     dbc:	8c 81       	ldd	r24, Y+4	; 0x04
     dbe:	82 30       	cpi	r24, 0x02	; 2
     dc0:	29 f1       	breq	.+74     	; 0xe0c <TIMER_Init+0x132>
     dc2:	28 f4       	brcc	.+10     	; 0xdce <TIMER_Init+0xf4>
     dc4:	88 23       	and	r24, r24
     dc6:	a9 f0       	breq	.+42     	; 0xdf2 <TIMER_Init+0x118>
     dc8:	81 30       	cpi	r24, 0x01	; 1
     dca:	31 f0       	breq	.+12     	; 0xdd8 <TIMER_Init+0xfe>
     dcc:	45 c0       	rjmp	.+138    	; 0xe58 <TIMER_Init+0x17e>
     dce:	83 30       	cpi	r24, 0x03	; 3
     dd0:	51 f1       	breq	.+84     	; 0xe26 <TIMER_Init+0x14c>
     dd2:	84 30       	cpi	r24, 0x04	; 4
     dd4:	a9 f1       	breq	.+106    	; 0xe40 <TIMER_Init+0x166>
     dd6:	40 c0       	rjmp	.+128    	; 0xe58 <TIMER_Init+0x17e>
     dd8:	8f b5       	in	r24, 0x2f	; 47
     dda:	8e 7f       	andi	r24, 0xFE	; 254
     ddc:	8f bd       	out	0x2f, r24	; 47
     dde:	8f b5       	in	r24, 0x2f	; 47
     de0:	8d 7f       	andi	r24, 0xFD	; 253
     de2:	8f bd       	out	0x2f, r24	; 47
     de4:	8e b5       	in	r24, 0x2e	; 46
     de6:	87 7f       	andi	r24, 0xF7	; 247
     de8:	8e bd       	out	0x2e, r24	; 46
     dea:	8e b5       	in	r24, 0x2e	; 46
     dec:	8f 7e       	andi	r24, 0xEF	; 239
     dee:	8e bd       	out	0x2e, r24	; 46
     df0:	33 c0       	rjmp	.+102    	; 0xe58 <TIMER_Init+0x17e>
     df2:	8f b5       	in	r24, 0x2f	; 47
     df4:	8e 7f       	andi	r24, 0xFE	; 254
     df6:	8f bd       	out	0x2f, r24	; 47
     df8:	8f b5       	in	r24, 0x2f	; 47
     dfa:	8d 7f       	andi	r24, 0xFD	; 253
     dfc:	8f bd       	out	0x2f, r24	; 47
     dfe:	8e b5       	in	r24, 0x2e	; 46
     e00:	88 60       	ori	r24, 0x08	; 8
     e02:	8e bd       	out	0x2e, r24	; 46
     e04:	8e b5       	in	r24, 0x2e	; 46
     e06:	8f 7e       	andi	r24, 0xEF	; 239
     e08:	8e bd       	out	0x2e, r24	; 46
     e0a:	26 c0       	rjmp	.+76     	; 0xe58 <TIMER_Init+0x17e>
     e0c:	8f b5       	in	r24, 0x2f	; 47
     e0e:	8e 7f       	andi	r24, 0xFE	; 254
     e10:	8f bd       	out	0x2f, r24	; 47
     e12:	8f b5       	in	r24, 0x2f	; 47
     e14:	82 60       	ori	r24, 0x02	; 2
     e16:	8f bd       	out	0x2f, r24	; 47
     e18:	8e b5       	in	r24, 0x2e	; 46
     e1a:	88 60       	ori	r24, 0x08	; 8
     e1c:	8e bd       	out	0x2e, r24	; 46
     e1e:	8e b5       	in	r24, 0x2e	; 46
     e20:	80 61       	ori	r24, 0x10	; 16
     e22:	8e bd       	out	0x2e, r24	; 46
     e24:	19 c0       	rjmp	.+50     	; 0xe58 <TIMER_Init+0x17e>
     e26:	8f b5       	in	r24, 0x2f	; 47
     e28:	81 60       	ori	r24, 0x01	; 1
     e2a:	8f bd       	out	0x2f, r24	; 47
     e2c:	8f b5       	in	r24, 0x2f	; 47
     e2e:	82 60       	ori	r24, 0x02	; 2
     e30:	8f bd       	out	0x2f, r24	; 47
     e32:	8e b5       	in	r24, 0x2e	; 46
     e34:	88 60       	ori	r24, 0x08	; 8
     e36:	8e bd       	out	0x2e, r24	; 46
     e38:	8e b5       	in	r24, 0x2e	; 46
     e3a:	80 61       	ori	r24, 0x10	; 16
     e3c:	8e bd       	out	0x2e, r24	; 46
     e3e:	0c c0       	rjmp	.+24     	; 0xe58 <TIMER_Init+0x17e>
     e40:	8f b5       	in	r24, 0x2f	; 47
     e42:	81 60       	ori	r24, 0x01	; 1
     e44:	8f bd       	out	0x2f, r24	; 47
     e46:	8f b5       	in	r24, 0x2f	; 47
     e48:	8d 7f       	andi	r24, 0xFD	; 253
     e4a:	8f bd       	out	0x2f, r24	; 47
     e4c:	8e b5       	in	r24, 0x2e	; 46
     e4e:	88 60       	ori	r24, 0x08	; 8
     e50:	8e bd       	out	0x2e, r24	; 46
     e52:	8e b5       	in	r24, 0x2e	; 46
     e54:	8f 7e       	andi	r24, 0xEF	; 239
     e56:	8e bd       	out	0x2e, r24	; 46
     e58:	8a 81       	ldd	r24, Y+2	; 0x02
     e5a:	88 23       	and	r24, r24
     e5c:	19 f0       	breq	.+6      	; 0xe64 <TIMER_Init+0x18a>
     e5e:	81 30       	cpi	r24, 0x01	; 1
     e60:	91 f0       	breq	.+36     	; 0xe86 <TIMER_Init+0x1ac>
     e62:	25 c0       	rjmp	.+74     	; 0xeae <TIMER_Init+0x1d4>
     e64:	2f b5       	in	r18, 0x2f	; 47
     e66:	9d 81       	ldd	r25, Y+5	; 0x05
     e68:	30 e4       	ldi	r19, 0x40	; 64
     e6a:	93 9f       	mul	r25, r19
     e6c:	c0 01       	movw	r24, r0
     e6e:	11 24       	eor	r1, r1
     e70:	82 2b       	or	r24, r18
     e72:	8f bd       	out	0x2f, r24	; 47
     e74:	29 b7       	in	r18, 0x39	; 57
     e76:	98 85       	ldd	r25, Y+8	; 0x08
     e78:	40 e1       	ldi	r20, 0x10	; 16
     e7a:	94 9f       	mul	r25, r20
     e7c:	c0 01       	movw	r24, r0
     e7e:	11 24       	eor	r1, r1
     e80:	82 2b       	or	r24, r18
     e82:	89 bf       	out	0x39, r24	; 57
     e84:	14 c0       	rjmp	.+40     	; 0xeae <TIMER_Init+0x1d4>
     e86:	2f b5       	in	r18, 0x2f	; 47
     e88:	9d 81       	ldd	r25, Y+5	; 0x05
     e8a:	50 e1       	ldi	r21, 0x10	; 16
     e8c:	95 9f       	mul	r25, r21
     e8e:	c0 01       	movw	r24, r0
     e90:	11 24       	eor	r1, r1
     e92:	82 2b       	or	r24, r18
     e94:	8f bd       	out	0x2f, r24	; 47
     e96:	29 b7       	in	r18, 0x39	; 57
     e98:	98 85       	ldd	r25, Y+8	; 0x08
     e9a:	89 2f       	mov	r24, r25
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	82 2b       	or	r24, r18
     eac:	89 bf       	out	0x39, r24	; 57
     eae:	9e b5       	in	r25, 0x2e	; 46
     eb0:	8e 81       	ldd	r24, Y+6	; 0x06
     eb2:	89 2b       	or	r24, r25
     eb4:	8e bd       	out	0x2e, r24	; 46
     eb6:	3b c0       	rjmp	.+118    	; 0xf2e <TIMER_Init+0x254>
     eb8:	25 b5       	in	r18, 0x25	; 37
     eba:	3e 81       	ldd	r19, Y+6	; 0x06
     ebc:	9d 81       	ldd	r25, Y+5	; 0x05
     ebe:	40 e1       	ldi	r20, 0x10	; 16
     ec0:	94 9f       	mul	r25, r20
     ec2:	c0 01       	movw	r24, r0
     ec4:	11 24       	eor	r1, r1
     ec6:	83 2b       	or	r24, r19
     ec8:	82 2b       	or	r24, r18
     eca:	85 bd       	out	0x25, r24	; 37
     ecc:	29 b7       	in	r18, 0x39	; 57
     ece:	8f 81       	ldd	r24, Y+7	; 0x07
     ed0:	90 e4       	ldi	r25, 0x40	; 64
     ed2:	89 9f       	mul	r24, r25
     ed4:	a0 01       	movw	r20, r0
     ed6:	11 24       	eor	r1, r1
     ed8:	98 85       	ldd	r25, Y+8	; 0x08
     eda:	30 e8       	ldi	r19, 0x80	; 128
     edc:	93 9f       	mul	r25, r19
     ede:	c0 01       	movw	r24, r0
     ee0:	11 24       	eor	r1, r1
     ee2:	84 2b       	or	r24, r20
     ee4:	82 2b       	or	r24, r18
     ee6:	89 bf       	out	0x39, r24	; 57
     ee8:	8f 81       	ldd	r24, Y+7	; 0x07
     eea:	81 11       	cpse	r24, r1
     eec:	03 c0       	rjmp	.+6      	; 0xef4 <TIMER_Init+0x21a>
     eee:	88 85       	ldd	r24, Y+8	; 0x08
     ef0:	88 23       	and	r24, r24
     ef2:	19 f0       	breq	.+6      	; 0xefa <TIMER_Init+0x220>
     ef4:	8f b7       	in	r24, 0x3f	; 63
     ef6:	80 68       	ori	r24, 0x80	; 128
     ef8:	8f bf       	out	0x3f, r24	; 63
     efa:	85 b5       	in	r24, 0x25	; 37
     efc:	8f 7b       	andi	r24, 0xBF	; 191
     efe:	85 bd       	out	0x25, r24	; 37
     f00:	8b 81       	ldd	r24, Y+3	; 0x03
     f02:	81 30       	cpi	r24, 0x01	; 1
     f04:	49 f0       	breq	.+18     	; 0xf18 <TIMER_Init+0x23e>
     f06:	28 f0       	brcs	.+10     	; 0xf12 <TIMER_Init+0x238>
     f08:	82 30       	cpi	r24, 0x02	; 2
     f0a:	51 f0       	breq	.+20     	; 0xf20 <TIMER_Init+0x246>
     f0c:	83 30       	cpi	r24, 0x03	; 3
     f0e:	61 f0       	breq	.+24     	; 0xf28 <TIMER_Init+0x24e>
     f10:	0e c0       	rjmp	.+28     	; 0xf2e <TIMER_Init+0x254>
     f12:	85 b5       	in	r24, 0x25	; 37
     f14:	85 bd       	out	0x25, r24	; 37
     f16:	0b c0       	rjmp	.+22     	; 0xf2e <TIMER_Init+0x254>
     f18:	85 b5       	in	r24, 0x25	; 37
     f1a:	88 60       	ori	r24, 0x08	; 8
     f1c:	85 bd       	out	0x25, r24	; 37
     f1e:	07 c0       	rjmp	.+14     	; 0xf2e <TIMER_Init+0x254>
     f20:	85 b5       	in	r24, 0x25	; 37
     f22:	88 64       	ori	r24, 0x48	; 72
     f24:	85 bd       	out	0x25, r24	; 37
     f26:	03 c0       	rjmp	.+6      	; 0xf2e <TIMER_Init+0x254>
     f28:	85 b5       	in	r24, 0x25	; 37
     f2a:	80 64       	ori	r24, 0x40	; 64
     f2c:	85 bd       	out	0x25, r24	; 37
     f2e:	29 96       	adiw	r28, 0x09	; 9
     f30:	0f b6       	in	r0, 0x3f	; 63
     f32:	f8 94       	cli
     f34:	de bf       	out	0x3e, r29	; 62
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	cd bf       	out	0x3d, r28	; 61
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	08 95       	ret

00000f44 <TIMER_Set_OCR_Value>:
	}
}

void TIMER_Set_OCR_Value( TMR_Channel_t timerChannel , uint16 value)
{
	switch(timerChannel)
     f44:	82 30       	cpi	r24, 0x02	; 2
     f46:	89 f0       	breq	.+34     	; 0xf6a <TIMER_Set_OCR_Value+0x26>
     f48:	18 f4       	brcc	.+6      	; 0xf50 <TIMER_Set_OCR_Value+0xc>
     f4a:	88 23       	and	r24, r24
     f4c:	31 f0       	breq	.+12     	; 0xf5a <TIMER_Set_OCR_Value+0x16>
     f4e:	08 95       	ret
     f50:	83 30       	cpi	r24, 0x03	; 3
     f52:	29 f0       	breq	.+10     	; 0xf5e <TIMER_Set_OCR_Value+0x1a>
     f54:	84 30       	cpi	r24, 0x04	; 4
     f56:	31 f0       	breq	.+12     	; 0xf64 <TIMER_Set_OCR_Value+0x20>
     f58:	08 95       	ret
	{

		case TIMER0 :
		{
			OCR0 =(uint8)value ;
     f5a:	6c bf       	out	0x3c, r22	; 60
			break;
     f5c:	08 95       	ret
		}

		case TIMER1_A :
		{
			OCR1A =(uint16)value ;
     f5e:	7b bd       	out	0x2b, r23	; 43
     f60:	6a bd       	out	0x2a, r22	; 42
			break;
     f62:	08 95       	ret
		}
			   
		case TIMER1_B :
		{
			OCR1B =(uint16)value ;
     f64:	79 bd       	out	0x29, r23	; 41
     f66:	68 bd       	out	0x28, r22	; 40
			break;
     f68:	08 95       	ret
		} 

		case TIMER2 :
		{
			OCR2 =(uint8)value ;
     f6a:	63 bd       	out	0x23, r22	; 35
     f6c:	08 95       	ret

00000f6e <__subsf3>:
     f6e:	50 58       	subi	r21, 0x80	; 128

00000f70 <__addsf3>:
     f70:	bb 27       	eor	r27, r27
     f72:	aa 27       	eor	r26, r26
     f74:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__addsf3x>
     f78:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_round>
     f7c:	0e 94 34 09 	call	0x1268	; 0x1268 <__fp_pscA>
     f80:	38 f0       	brcs	.+14     	; 0xf90 <__addsf3+0x20>
     f82:	0e 94 3b 09 	call	0x1276	; 0x1276 <__fp_pscB>
     f86:	20 f0       	brcs	.+8      	; 0xf90 <__addsf3+0x20>
     f88:	39 f4       	brne	.+14     	; 0xf98 <__addsf3+0x28>
     f8a:	9f 3f       	cpi	r25, 0xFF	; 255
     f8c:	19 f4       	brne	.+6      	; 0xf94 <__addsf3+0x24>
     f8e:	26 f4       	brtc	.+8      	; 0xf98 <__addsf3+0x28>
     f90:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_nan>
     f94:	0e f4       	brtc	.+2      	; 0xf98 <__addsf3+0x28>
     f96:	e0 95       	com	r30
     f98:	e7 fb       	bst	r30, 7
     f9a:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>

00000f9e <__addsf3x>:
     f9e:	e9 2f       	mov	r30, r25
     fa0:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__fp_split3>
     fa4:	58 f3       	brcs	.-42     	; 0xf7c <__addsf3+0xc>
     fa6:	ba 17       	cp	r27, r26
     fa8:	62 07       	cpc	r22, r18
     faa:	73 07       	cpc	r23, r19
     fac:	84 07       	cpc	r24, r20
     fae:	95 07       	cpc	r25, r21
     fb0:	20 f0       	brcs	.+8      	; 0xfba <__addsf3x+0x1c>
     fb2:	79 f4       	brne	.+30     	; 0xfd2 <__addsf3x+0x34>
     fb4:	a6 f5       	brtc	.+104    	; 0x101e <__addsf3x+0x80>
     fb6:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__fp_zero>
     fba:	0e f4       	brtc	.+2      	; 0xfbe <__addsf3x+0x20>
     fbc:	e0 95       	com	r30
     fbe:	0b 2e       	mov	r0, r27
     fc0:	ba 2f       	mov	r27, r26
     fc2:	a0 2d       	mov	r26, r0
     fc4:	0b 01       	movw	r0, r22
     fc6:	b9 01       	movw	r22, r18
     fc8:	90 01       	movw	r18, r0
     fca:	0c 01       	movw	r0, r24
     fcc:	ca 01       	movw	r24, r20
     fce:	a0 01       	movw	r20, r0
     fd0:	11 24       	eor	r1, r1
     fd2:	ff 27       	eor	r31, r31
     fd4:	59 1b       	sub	r21, r25
     fd6:	99 f0       	breq	.+38     	; 0xffe <__addsf3x+0x60>
     fd8:	59 3f       	cpi	r21, 0xF9	; 249
     fda:	50 f4       	brcc	.+20     	; 0xff0 <__addsf3x+0x52>
     fdc:	50 3e       	cpi	r21, 0xE0	; 224
     fde:	68 f1       	brcs	.+90     	; 0x103a <__addsf3x+0x9c>
     fe0:	1a 16       	cp	r1, r26
     fe2:	f0 40       	sbci	r31, 0x00	; 0
     fe4:	a2 2f       	mov	r26, r18
     fe6:	23 2f       	mov	r18, r19
     fe8:	34 2f       	mov	r19, r20
     fea:	44 27       	eor	r20, r20
     fec:	58 5f       	subi	r21, 0xF8	; 248
     fee:	f3 cf       	rjmp	.-26     	; 0xfd6 <__addsf3x+0x38>
     ff0:	46 95       	lsr	r20
     ff2:	37 95       	ror	r19
     ff4:	27 95       	ror	r18
     ff6:	a7 95       	ror	r26
     ff8:	f0 40       	sbci	r31, 0x00	; 0
     ffa:	53 95       	inc	r21
     ffc:	c9 f7       	brne	.-14     	; 0xff0 <__addsf3x+0x52>
     ffe:	7e f4       	brtc	.+30     	; 0x101e <__addsf3x+0x80>
    1000:	1f 16       	cp	r1, r31
    1002:	ba 0b       	sbc	r27, r26
    1004:	62 0b       	sbc	r22, r18
    1006:	73 0b       	sbc	r23, r19
    1008:	84 0b       	sbc	r24, r20
    100a:	ba f0       	brmi	.+46     	; 0x103a <__addsf3x+0x9c>
    100c:	91 50       	subi	r25, 0x01	; 1
    100e:	a1 f0       	breq	.+40     	; 0x1038 <__addsf3x+0x9a>
    1010:	ff 0f       	add	r31, r31
    1012:	bb 1f       	adc	r27, r27
    1014:	66 1f       	adc	r22, r22
    1016:	77 1f       	adc	r23, r23
    1018:	88 1f       	adc	r24, r24
    101a:	c2 f7       	brpl	.-16     	; 0x100c <__addsf3x+0x6e>
    101c:	0e c0       	rjmp	.+28     	; 0x103a <__addsf3x+0x9c>
    101e:	ba 0f       	add	r27, r26
    1020:	62 1f       	adc	r22, r18
    1022:	73 1f       	adc	r23, r19
    1024:	84 1f       	adc	r24, r20
    1026:	48 f4       	brcc	.+18     	; 0x103a <__addsf3x+0x9c>
    1028:	87 95       	ror	r24
    102a:	77 95       	ror	r23
    102c:	67 95       	ror	r22
    102e:	b7 95       	ror	r27
    1030:	f7 95       	ror	r31
    1032:	9e 3f       	cpi	r25, 0xFE	; 254
    1034:	08 f0       	brcs	.+2      	; 0x1038 <__addsf3x+0x9a>
    1036:	b0 cf       	rjmp	.-160    	; 0xf98 <__addsf3+0x28>
    1038:	93 95       	inc	r25
    103a:	88 0f       	add	r24, r24
    103c:	08 f0       	brcs	.+2      	; 0x1040 <__addsf3x+0xa2>
    103e:	99 27       	eor	r25, r25
    1040:	ee 0f       	add	r30, r30
    1042:	97 95       	ror	r25
    1044:	87 95       	ror	r24
    1046:	08 95       	ret

00001048 <__cmpsf2>:
    1048:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_cmp>
    104c:	08 f4       	brcc	.+2      	; 0x1050 <__cmpsf2+0x8>
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	08 95       	ret

00001052 <__divsf3>:
    1052:	0e 94 3d 08 	call	0x107a	; 0x107a <__divsf3x>
    1056:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_round>
    105a:	0e 94 3b 09 	call	0x1276	; 0x1276 <__fp_pscB>
    105e:	58 f0       	brcs	.+22     	; 0x1076 <__divsf3+0x24>
    1060:	0e 94 34 09 	call	0x1268	; 0x1268 <__fp_pscA>
    1064:	40 f0       	brcs	.+16     	; 0x1076 <__divsf3+0x24>
    1066:	29 f4       	brne	.+10     	; 0x1072 <__divsf3+0x20>
    1068:	5f 3f       	cpi	r21, 0xFF	; 255
    106a:	29 f0       	breq	.+10     	; 0x1076 <__divsf3+0x24>
    106c:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    1070:	51 11       	cpse	r21, r1
    1072:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__fp_szero>
    1076:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_nan>

0000107a <__divsf3x>:
    107a:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__fp_split3>
    107e:	68 f3       	brcs	.-38     	; 0x105a <__divsf3+0x8>

00001080 <__divsf3_pse>:
    1080:	99 23       	and	r25, r25
    1082:	b1 f3       	breq	.-20     	; 0x1070 <__divsf3+0x1e>
    1084:	55 23       	and	r21, r21
    1086:	91 f3       	breq	.-28     	; 0x106c <__divsf3+0x1a>
    1088:	95 1b       	sub	r25, r21
    108a:	55 0b       	sbc	r21, r21
    108c:	bb 27       	eor	r27, r27
    108e:	aa 27       	eor	r26, r26
    1090:	62 17       	cp	r22, r18
    1092:	73 07       	cpc	r23, r19
    1094:	84 07       	cpc	r24, r20
    1096:	38 f0       	brcs	.+14     	; 0x10a6 <__divsf3_pse+0x26>
    1098:	9f 5f       	subi	r25, 0xFF	; 255
    109a:	5f 4f       	sbci	r21, 0xFF	; 255
    109c:	22 0f       	add	r18, r18
    109e:	33 1f       	adc	r19, r19
    10a0:	44 1f       	adc	r20, r20
    10a2:	aa 1f       	adc	r26, r26
    10a4:	a9 f3       	breq	.-22     	; 0x1090 <__divsf3_pse+0x10>
    10a6:	35 d0       	rcall	.+106    	; 0x1112 <__divsf3_pse+0x92>
    10a8:	0e 2e       	mov	r0, r30
    10aa:	3a f0       	brmi	.+14     	; 0x10ba <__divsf3_pse+0x3a>
    10ac:	e0 e8       	ldi	r30, 0x80	; 128
    10ae:	32 d0       	rcall	.+100    	; 0x1114 <__divsf3_pse+0x94>
    10b0:	91 50       	subi	r25, 0x01	; 1
    10b2:	50 40       	sbci	r21, 0x00	; 0
    10b4:	e6 95       	lsr	r30
    10b6:	00 1c       	adc	r0, r0
    10b8:	ca f7       	brpl	.-14     	; 0x10ac <__divsf3_pse+0x2c>
    10ba:	2b d0       	rcall	.+86     	; 0x1112 <__divsf3_pse+0x92>
    10bc:	fe 2f       	mov	r31, r30
    10be:	29 d0       	rcall	.+82     	; 0x1112 <__divsf3_pse+0x92>
    10c0:	66 0f       	add	r22, r22
    10c2:	77 1f       	adc	r23, r23
    10c4:	88 1f       	adc	r24, r24
    10c6:	bb 1f       	adc	r27, r27
    10c8:	26 17       	cp	r18, r22
    10ca:	37 07       	cpc	r19, r23
    10cc:	48 07       	cpc	r20, r24
    10ce:	ab 07       	cpc	r26, r27
    10d0:	b0 e8       	ldi	r27, 0x80	; 128
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <__divsf3_pse+0x56>
    10d4:	bb 0b       	sbc	r27, r27
    10d6:	80 2d       	mov	r24, r0
    10d8:	bf 01       	movw	r22, r30
    10da:	ff 27       	eor	r31, r31
    10dc:	93 58       	subi	r25, 0x83	; 131
    10de:	5f 4f       	sbci	r21, 0xFF	; 255
    10e0:	3a f0       	brmi	.+14     	; 0x10f0 <__divsf3_pse+0x70>
    10e2:	9e 3f       	cpi	r25, 0xFE	; 254
    10e4:	51 05       	cpc	r21, r1
    10e6:	78 f0       	brcs	.+30     	; 0x1106 <__divsf3_pse+0x86>
    10e8:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    10ec:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__fp_szero>
    10f0:	5f 3f       	cpi	r21, 0xFF	; 255
    10f2:	e4 f3       	brlt	.-8      	; 0x10ec <__divsf3_pse+0x6c>
    10f4:	98 3e       	cpi	r25, 0xE8	; 232
    10f6:	d4 f3       	brlt	.-12     	; 0x10ec <__divsf3_pse+0x6c>
    10f8:	86 95       	lsr	r24
    10fa:	77 95       	ror	r23
    10fc:	67 95       	ror	r22
    10fe:	b7 95       	ror	r27
    1100:	f7 95       	ror	r31
    1102:	9f 5f       	subi	r25, 0xFF	; 255
    1104:	c9 f7       	brne	.-14     	; 0x10f8 <__divsf3_pse+0x78>
    1106:	88 0f       	add	r24, r24
    1108:	91 1d       	adc	r25, r1
    110a:	96 95       	lsr	r25
    110c:	87 95       	ror	r24
    110e:	97 f9       	bld	r25, 7
    1110:	08 95       	ret
    1112:	e1 e0       	ldi	r30, 0x01	; 1
    1114:	66 0f       	add	r22, r22
    1116:	77 1f       	adc	r23, r23
    1118:	88 1f       	adc	r24, r24
    111a:	bb 1f       	adc	r27, r27
    111c:	62 17       	cp	r22, r18
    111e:	73 07       	cpc	r23, r19
    1120:	84 07       	cpc	r24, r20
    1122:	ba 07       	cpc	r27, r26
    1124:	20 f0       	brcs	.+8      	; 0x112e <__divsf3_pse+0xae>
    1126:	62 1b       	sub	r22, r18
    1128:	73 0b       	sbc	r23, r19
    112a:	84 0b       	sbc	r24, r20
    112c:	ba 0b       	sbc	r27, r26
    112e:	ee 1f       	adc	r30, r30
    1130:	88 f7       	brcc	.-30     	; 0x1114 <__divsf3_pse+0x94>
    1132:	e0 95       	com	r30
    1134:	08 95       	ret

00001136 <__fixunssfsi>:
    1136:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <__fp_splitA>
    113a:	88 f0       	brcs	.+34     	; 0x115e <__fixunssfsi+0x28>
    113c:	9f 57       	subi	r25, 0x7F	; 127
    113e:	98 f0       	brcs	.+38     	; 0x1166 <__fixunssfsi+0x30>
    1140:	b9 2f       	mov	r27, r25
    1142:	99 27       	eor	r25, r25
    1144:	b7 51       	subi	r27, 0x17	; 23
    1146:	b0 f0       	brcs	.+44     	; 0x1174 <__fixunssfsi+0x3e>
    1148:	e1 f0       	breq	.+56     	; 0x1182 <__fixunssfsi+0x4c>
    114a:	66 0f       	add	r22, r22
    114c:	77 1f       	adc	r23, r23
    114e:	88 1f       	adc	r24, r24
    1150:	99 1f       	adc	r25, r25
    1152:	1a f0       	brmi	.+6      	; 0x115a <__fixunssfsi+0x24>
    1154:	ba 95       	dec	r27
    1156:	c9 f7       	brne	.-14     	; 0x114a <__fixunssfsi+0x14>
    1158:	14 c0       	rjmp	.+40     	; 0x1182 <__fixunssfsi+0x4c>
    115a:	b1 30       	cpi	r27, 0x01	; 1
    115c:	91 f0       	breq	.+36     	; 0x1182 <__fixunssfsi+0x4c>
    115e:	0e 94 75 09 	call	0x12ea	; 0x12ea <__fp_zero>
    1162:	b1 e0       	ldi	r27, 0x01	; 1
    1164:	08 95       	ret
    1166:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__fp_zero>
    116a:	67 2f       	mov	r22, r23
    116c:	78 2f       	mov	r23, r24
    116e:	88 27       	eor	r24, r24
    1170:	b8 5f       	subi	r27, 0xF8	; 248
    1172:	39 f0       	breq	.+14     	; 0x1182 <__fixunssfsi+0x4c>
    1174:	b9 3f       	cpi	r27, 0xF9	; 249
    1176:	cc f3       	brlt	.-14     	; 0x116a <__fixunssfsi+0x34>
    1178:	86 95       	lsr	r24
    117a:	77 95       	ror	r23
    117c:	67 95       	ror	r22
    117e:	b3 95       	inc	r27
    1180:	d9 f7       	brne	.-10     	; 0x1178 <__fixunssfsi+0x42>
    1182:	3e f4       	brtc	.+14     	; 0x1192 <__fixunssfsi+0x5c>
    1184:	90 95       	com	r25
    1186:	80 95       	com	r24
    1188:	70 95       	com	r23
    118a:	61 95       	neg	r22
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	8f 4f       	sbci	r24, 0xFF	; 255
    1190:	9f 4f       	sbci	r25, 0xFF	; 255
    1192:	08 95       	ret

00001194 <__floatunsisf>:
    1194:	e8 94       	clt
    1196:	09 c0       	rjmp	.+18     	; 0x11aa <__floatsisf+0x12>

00001198 <__floatsisf>:
    1198:	97 fb       	bst	r25, 7
    119a:	3e f4       	brtc	.+14     	; 0x11aa <__floatsisf+0x12>
    119c:	90 95       	com	r25
    119e:	80 95       	com	r24
    11a0:	70 95       	com	r23
    11a2:	61 95       	neg	r22
    11a4:	7f 4f       	sbci	r23, 0xFF	; 255
    11a6:	8f 4f       	sbci	r24, 0xFF	; 255
    11a8:	9f 4f       	sbci	r25, 0xFF	; 255
    11aa:	99 23       	and	r25, r25
    11ac:	a9 f0       	breq	.+42     	; 0x11d8 <__floatsisf+0x40>
    11ae:	f9 2f       	mov	r31, r25
    11b0:	96 e9       	ldi	r25, 0x96	; 150
    11b2:	bb 27       	eor	r27, r27
    11b4:	93 95       	inc	r25
    11b6:	f6 95       	lsr	r31
    11b8:	87 95       	ror	r24
    11ba:	77 95       	ror	r23
    11bc:	67 95       	ror	r22
    11be:	b7 95       	ror	r27
    11c0:	f1 11       	cpse	r31, r1
    11c2:	f8 cf       	rjmp	.-16     	; 0x11b4 <__floatsisf+0x1c>
    11c4:	fa f4       	brpl	.+62     	; 0x1204 <__floatsisf+0x6c>
    11c6:	bb 0f       	add	r27, r27
    11c8:	11 f4       	brne	.+4      	; 0x11ce <__floatsisf+0x36>
    11ca:	60 ff       	sbrs	r22, 0
    11cc:	1b c0       	rjmp	.+54     	; 0x1204 <__floatsisf+0x6c>
    11ce:	6f 5f       	subi	r22, 0xFF	; 255
    11d0:	7f 4f       	sbci	r23, 0xFF	; 255
    11d2:	8f 4f       	sbci	r24, 0xFF	; 255
    11d4:	9f 4f       	sbci	r25, 0xFF	; 255
    11d6:	16 c0       	rjmp	.+44     	; 0x1204 <__floatsisf+0x6c>
    11d8:	88 23       	and	r24, r24
    11da:	11 f0       	breq	.+4      	; 0x11e0 <__floatsisf+0x48>
    11dc:	96 e9       	ldi	r25, 0x96	; 150
    11de:	11 c0       	rjmp	.+34     	; 0x1202 <__floatsisf+0x6a>
    11e0:	77 23       	and	r23, r23
    11e2:	21 f0       	breq	.+8      	; 0x11ec <__floatsisf+0x54>
    11e4:	9e e8       	ldi	r25, 0x8E	; 142
    11e6:	87 2f       	mov	r24, r23
    11e8:	76 2f       	mov	r23, r22
    11ea:	05 c0       	rjmp	.+10     	; 0x11f6 <__floatsisf+0x5e>
    11ec:	66 23       	and	r22, r22
    11ee:	71 f0       	breq	.+28     	; 0x120c <__floatsisf+0x74>
    11f0:	96 e8       	ldi	r25, 0x86	; 134
    11f2:	86 2f       	mov	r24, r22
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	2a f0       	brmi	.+10     	; 0x1204 <__floatsisf+0x6c>
    11fa:	9a 95       	dec	r25
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	da f7       	brpl	.-10     	; 0x11fa <__floatsisf+0x62>
    1204:	88 0f       	add	r24, r24
    1206:	96 95       	lsr	r25
    1208:	87 95       	ror	r24
    120a:	97 f9       	bld	r25, 7
    120c:	08 95       	ret

0000120e <__fp_cmp>:
    120e:	99 0f       	add	r25, r25
    1210:	00 08       	sbc	r0, r0
    1212:	55 0f       	add	r21, r21
    1214:	aa 0b       	sbc	r26, r26
    1216:	e0 e8       	ldi	r30, 0x80	; 128
    1218:	fe ef       	ldi	r31, 0xFE	; 254
    121a:	16 16       	cp	r1, r22
    121c:	17 06       	cpc	r1, r23
    121e:	e8 07       	cpc	r30, r24
    1220:	f9 07       	cpc	r31, r25
    1222:	c0 f0       	brcs	.+48     	; 0x1254 <__fp_cmp+0x46>
    1224:	12 16       	cp	r1, r18
    1226:	13 06       	cpc	r1, r19
    1228:	e4 07       	cpc	r30, r20
    122a:	f5 07       	cpc	r31, r21
    122c:	98 f0       	brcs	.+38     	; 0x1254 <__fp_cmp+0x46>
    122e:	62 1b       	sub	r22, r18
    1230:	73 0b       	sbc	r23, r19
    1232:	84 0b       	sbc	r24, r20
    1234:	95 0b       	sbc	r25, r21
    1236:	39 f4       	brne	.+14     	; 0x1246 <__fp_cmp+0x38>
    1238:	0a 26       	eor	r0, r26
    123a:	61 f0       	breq	.+24     	; 0x1254 <__fp_cmp+0x46>
    123c:	23 2b       	or	r18, r19
    123e:	24 2b       	or	r18, r20
    1240:	25 2b       	or	r18, r21
    1242:	21 f4       	brne	.+8      	; 0x124c <__fp_cmp+0x3e>
    1244:	08 95       	ret
    1246:	0a 26       	eor	r0, r26
    1248:	09 f4       	brne	.+2      	; 0x124c <__fp_cmp+0x3e>
    124a:	a1 40       	sbci	r26, 0x01	; 1
    124c:	a6 95       	lsr	r26
    124e:	8f ef       	ldi	r24, 0xFF	; 255
    1250:	81 1d       	adc	r24, r1
    1252:	81 1d       	adc	r24, r1
    1254:	08 95       	ret

00001256 <__fp_inf>:
    1256:	97 f9       	bld	r25, 7
    1258:	9f 67       	ori	r25, 0x7F	; 127
    125a:	80 e8       	ldi	r24, 0x80	; 128
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	60 e0       	ldi	r22, 0x00	; 0
    1260:	08 95       	ret

00001262 <__fp_nan>:
    1262:	9f ef       	ldi	r25, 0xFF	; 255
    1264:	80 ec       	ldi	r24, 0xC0	; 192
    1266:	08 95       	ret

00001268 <__fp_pscA>:
    1268:	00 24       	eor	r0, r0
    126a:	0a 94       	dec	r0
    126c:	16 16       	cp	r1, r22
    126e:	17 06       	cpc	r1, r23
    1270:	18 06       	cpc	r1, r24
    1272:	09 06       	cpc	r0, r25
    1274:	08 95       	ret

00001276 <__fp_pscB>:
    1276:	00 24       	eor	r0, r0
    1278:	0a 94       	dec	r0
    127a:	12 16       	cp	r1, r18
    127c:	13 06       	cpc	r1, r19
    127e:	14 06       	cpc	r1, r20
    1280:	05 06       	cpc	r0, r21
    1282:	08 95       	ret

00001284 <__fp_round>:
    1284:	09 2e       	mov	r0, r25
    1286:	03 94       	inc	r0
    1288:	00 0c       	add	r0, r0
    128a:	11 f4       	brne	.+4      	; 0x1290 <__fp_round+0xc>
    128c:	88 23       	and	r24, r24
    128e:	52 f0       	brmi	.+20     	; 0x12a4 <__fp_round+0x20>
    1290:	bb 0f       	add	r27, r27
    1292:	40 f4       	brcc	.+16     	; 0x12a4 <__fp_round+0x20>
    1294:	bf 2b       	or	r27, r31
    1296:	11 f4       	brne	.+4      	; 0x129c <__fp_round+0x18>
    1298:	60 ff       	sbrs	r22, 0
    129a:	04 c0       	rjmp	.+8      	; 0x12a4 <__fp_round+0x20>
    129c:	6f 5f       	subi	r22, 0xFF	; 255
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	8f 4f       	sbci	r24, 0xFF	; 255
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	08 95       	ret

000012a6 <__fp_split3>:
    12a6:	57 fd       	sbrc	r21, 7
    12a8:	90 58       	subi	r25, 0x80	; 128
    12aa:	44 0f       	add	r20, r20
    12ac:	55 1f       	adc	r21, r21
    12ae:	59 f0       	breq	.+22     	; 0x12c6 <__fp_splitA+0x10>
    12b0:	5f 3f       	cpi	r21, 0xFF	; 255
    12b2:	71 f0       	breq	.+28     	; 0x12d0 <__fp_splitA+0x1a>
    12b4:	47 95       	ror	r20

000012b6 <__fp_splitA>:
    12b6:	88 0f       	add	r24, r24
    12b8:	97 fb       	bst	r25, 7
    12ba:	99 1f       	adc	r25, r25
    12bc:	61 f0       	breq	.+24     	; 0x12d6 <__fp_splitA+0x20>
    12be:	9f 3f       	cpi	r25, 0xFF	; 255
    12c0:	79 f0       	breq	.+30     	; 0x12e0 <__fp_splitA+0x2a>
    12c2:	87 95       	ror	r24
    12c4:	08 95       	ret
    12c6:	12 16       	cp	r1, r18
    12c8:	13 06       	cpc	r1, r19
    12ca:	14 06       	cpc	r1, r20
    12cc:	55 1f       	adc	r21, r21
    12ce:	f2 cf       	rjmp	.-28     	; 0x12b4 <__fp_split3+0xe>
    12d0:	46 95       	lsr	r20
    12d2:	f1 df       	rcall	.-30     	; 0x12b6 <__fp_splitA>
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <__fp_splitA+0x30>
    12d6:	16 16       	cp	r1, r22
    12d8:	17 06       	cpc	r1, r23
    12da:	18 06       	cpc	r1, r24
    12dc:	99 1f       	adc	r25, r25
    12de:	f1 cf       	rjmp	.-30     	; 0x12c2 <__fp_splitA+0xc>
    12e0:	86 95       	lsr	r24
    12e2:	71 05       	cpc	r23, r1
    12e4:	61 05       	cpc	r22, r1
    12e6:	08 94       	sec
    12e8:	08 95       	ret

000012ea <__fp_zero>:
    12ea:	e8 94       	clt

000012ec <__fp_szero>:
    12ec:	bb 27       	eor	r27, r27
    12ee:	66 27       	eor	r22, r22
    12f0:	77 27       	eor	r23, r23
    12f2:	cb 01       	movw	r24, r22
    12f4:	97 f9       	bld	r25, 7
    12f6:	08 95       	ret

000012f8 <__gesf2>:
    12f8:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_cmp>
    12fc:	08 f4       	brcc	.+2      	; 0x1300 <__gesf2+0x8>
    12fe:	8f ef       	ldi	r24, 0xFF	; 255
    1300:	08 95       	ret

00001302 <__mulsf3>:
    1302:	0e 94 94 09 	call	0x1328	; 0x1328 <__mulsf3x>
    1306:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_round>
    130a:	0e 94 34 09 	call	0x1268	; 0x1268 <__fp_pscA>
    130e:	38 f0       	brcs	.+14     	; 0x131e <__mulsf3+0x1c>
    1310:	0e 94 3b 09 	call	0x1276	; 0x1276 <__fp_pscB>
    1314:	20 f0       	brcs	.+8      	; 0x131e <__mulsf3+0x1c>
    1316:	95 23       	and	r25, r21
    1318:	11 f0       	breq	.+4      	; 0x131e <__mulsf3+0x1c>
    131a:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    131e:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_nan>
    1322:	11 24       	eor	r1, r1
    1324:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__fp_szero>

00001328 <__mulsf3x>:
    1328:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__fp_split3>
    132c:	70 f3       	brcs	.-36     	; 0x130a <__mulsf3+0x8>

0000132e <__mulsf3_pse>:
    132e:	95 9f       	mul	r25, r21
    1330:	c1 f3       	breq	.-16     	; 0x1322 <__mulsf3+0x20>
    1332:	95 0f       	add	r25, r21
    1334:	50 e0       	ldi	r21, 0x00	; 0
    1336:	55 1f       	adc	r21, r21
    1338:	62 9f       	mul	r22, r18
    133a:	f0 01       	movw	r30, r0
    133c:	72 9f       	mul	r23, r18
    133e:	bb 27       	eor	r27, r27
    1340:	f0 0d       	add	r31, r0
    1342:	b1 1d       	adc	r27, r1
    1344:	63 9f       	mul	r22, r19
    1346:	aa 27       	eor	r26, r26
    1348:	f0 0d       	add	r31, r0
    134a:	b1 1d       	adc	r27, r1
    134c:	aa 1f       	adc	r26, r26
    134e:	64 9f       	mul	r22, r20
    1350:	66 27       	eor	r22, r22
    1352:	b0 0d       	add	r27, r0
    1354:	a1 1d       	adc	r26, r1
    1356:	66 1f       	adc	r22, r22
    1358:	82 9f       	mul	r24, r18
    135a:	22 27       	eor	r18, r18
    135c:	b0 0d       	add	r27, r0
    135e:	a1 1d       	adc	r26, r1
    1360:	62 1f       	adc	r22, r18
    1362:	73 9f       	mul	r23, r19
    1364:	b0 0d       	add	r27, r0
    1366:	a1 1d       	adc	r26, r1
    1368:	62 1f       	adc	r22, r18
    136a:	83 9f       	mul	r24, r19
    136c:	a0 0d       	add	r26, r0
    136e:	61 1d       	adc	r22, r1
    1370:	22 1f       	adc	r18, r18
    1372:	74 9f       	mul	r23, r20
    1374:	33 27       	eor	r19, r19
    1376:	a0 0d       	add	r26, r0
    1378:	61 1d       	adc	r22, r1
    137a:	23 1f       	adc	r18, r19
    137c:	84 9f       	mul	r24, r20
    137e:	60 0d       	add	r22, r0
    1380:	21 1d       	adc	r18, r1
    1382:	82 2f       	mov	r24, r18
    1384:	76 2f       	mov	r23, r22
    1386:	6a 2f       	mov	r22, r26
    1388:	11 24       	eor	r1, r1
    138a:	9f 57       	subi	r25, 0x7F	; 127
    138c:	50 40       	sbci	r21, 0x00	; 0
    138e:	9a f0       	brmi	.+38     	; 0x13b6 <__mulsf3_pse+0x88>
    1390:	f1 f0       	breq	.+60     	; 0x13ce <__mulsf3_pse+0xa0>
    1392:	88 23       	and	r24, r24
    1394:	4a f0       	brmi	.+18     	; 0x13a8 <__mulsf3_pse+0x7a>
    1396:	ee 0f       	add	r30, r30
    1398:	ff 1f       	adc	r31, r31
    139a:	bb 1f       	adc	r27, r27
    139c:	66 1f       	adc	r22, r22
    139e:	77 1f       	adc	r23, r23
    13a0:	88 1f       	adc	r24, r24
    13a2:	91 50       	subi	r25, 0x01	; 1
    13a4:	50 40       	sbci	r21, 0x00	; 0
    13a6:	a9 f7       	brne	.-22     	; 0x1392 <__mulsf3_pse+0x64>
    13a8:	9e 3f       	cpi	r25, 0xFE	; 254
    13aa:	51 05       	cpc	r21, r1
    13ac:	80 f0       	brcs	.+32     	; 0x13ce <__mulsf3_pse+0xa0>
    13ae:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    13b2:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__fp_szero>
    13b6:	5f 3f       	cpi	r21, 0xFF	; 255
    13b8:	e4 f3       	brlt	.-8      	; 0x13b2 <__mulsf3_pse+0x84>
    13ba:	98 3e       	cpi	r25, 0xE8	; 232
    13bc:	d4 f3       	brlt	.-12     	; 0x13b2 <__mulsf3_pse+0x84>
    13be:	86 95       	lsr	r24
    13c0:	77 95       	ror	r23
    13c2:	67 95       	ror	r22
    13c4:	b7 95       	ror	r27
    13c6:	f7 95       	ror	r31
    13c8:	e7 95       	ror	r30
    13ca:	9f 5f       	subi	r25, 0xFF	; 255
    13cc:	c1 f7       	brne	.-16     	; 0x13be <__mulsf3_pse+0x90>
    13ce:	fe 2b       	or	r31, r30
    13d0:	88 0f       	add	r24, r24
    13d2:	91 1d       	adc	r25, r1
    13d4:	96 95       	lsr	r25
    13d6:	87 95       	ror	r24
    13d8:	97 f9       	bld	r25, 7
    13da:	08 95       	ret

000013dc <__divmodhi4>:
    13dc:	97 fb       	bst	r25, 7
    13de:	07 2e       	mov	r0, r23
    13e0:	16 f4       	brtc	.+4      	; 0x13e6 <__divmodhi4+0xa>
    13e2:	00 94       	com	r0
    13e4:	07 d0       	rcall	.+14     	; 0x13f4 <__divmodhi4_neg1>
    13e6:	77 fd       	sbrc	r23, 7
    13e8:	09 d0       	rcall	.+18     	; 0x13fc <__divmodhi4_neg2>
    13ea:	0e 94 02 0a 	call	0x1404	; 0x1404 <__udivmodhi4>
    13ee:	07 fc       	sbrc	r0, 7
    13f0:	05 d0       	rcall	.+10     	; 0x13fc <__divmodhi4_neg2>
    13f2:	3e f4       	brtc	.+14     	; 0x1402 <__divmodhi4_exit>

000013f4 <__divmodhi4_neg1>:
    13f4:	90 95       	com	r25
    13f6:	81 95       	neg	r24
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	08 95       	ret

000013fc <__divmodhi4_neg2>:
    13fc:	70 95       	com	r23
    13fe:	61 95       	neg	r22
    1400:	7f 4f       	sbci	r23, 0xFF	; 255

00001402 <__divmodhi4_exit>:
    1402:	08 95       	ret

00001404 <__udivmodhi4>:
    1404:	aa 1b       	sub	r26, r26
    1406:	bb 1b       	sub	r27, r27
    1408:	51 e1       	ldi	r21, 0x11	; 17
    140a:	07 c0       	rjmp	.+14     	; 0x141a <__udivmodhi4_ep>

0000140c <__udivmodhi4_loop>:
    140c:	aa 1f       	adc	r26, r26
    140e:	bb 1f       	adc	r27, r27
    1410:	a6 17       	cp	r26, r22
    1412:	b7 07       	cpc	r27, r23
    1414:	10 f0       	brcs	.+4      	; 0x141a <__udivmodhi4_ep>
    1416:	a6 1b       	sub	r26, r22
    1418:	b7 0b       	sbc	r27, r23

0000141a <__udivmodhi4_ep>:
    141a:	88 1f       	adc	r24, r24
    141c:	99 1f       	adc	r25, r25
    141e:	5a 95       	dec	r21
    1420:	a9 f7       	brne	.-22     	; 0x140c <__udivmodhi4_loop>
    1422:	80 95       	com	r24
    1424:	90 95       	com	r25
    1426:	bc 01       	movw	r22, r24
    1428:	cd 01       	movw	r24, r26
    142a:	08 95       	ret

0000142c <dtostrf>:
    142c:	ef 92       	push	r14
    142e:	0f 93       	push	r16
    1430:	1f 93       	push	r17
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	e8 01       	movw	r28, r16
    1438:	47 fd       	sbrc	r20, 7
    143a:	02 c0       	rjmp	.+4      	; 0x1440 <dtostrf+0x14>
    143c:	34 e0       	ldi	r19, 0x04	; 4
    143e:	01 c0       	rjmp	.+2      	; 0x1442 <dtostrf+0x16>
    1440:	34 e1       	ldi	r19, 0x14	; 20
    1442:	04 2e       	mov	r0, r20
    1444:	00 0c       	add	r0, r0
    1446:	55 0b       	sbc	r21, r21
    1448:	57 ff       	sbrs	r21, 7
    144a:	03 c0       	rjmp	.+6      	; 0x1452 <dtostrf+0x26>
    144c:	51 95       	neg	r21
    144e:	41 95       	neg	r20
    1450:	51 09       	sbc	r21, r1
    1452:	e3 2e       	mov	r14, r19
    1454:	02 2f       	mov	r16, r18
    1456:	24 2f       	mov	r18, r20
    1458:	ae 01       	movw	r20, r28
    145a:	0e 94 36 0a 	call	0x146c	; 0x146c <dtoa_prf>
    145e:	ce 01       	movw	r24, r28
    1460:	df 91       	pop	r29
    1462:	cf 91       	pop	r28
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	ef 90       	pop	r14
    146a:	08 95       	ret

0000146c <dtoa_prf>:
    146c:	a9 e0       	ldi	r26, 0x09	; 9
    146e:	b0 e0       	ldi	r27, 0x00	; 0
    1470:	ec e3       	ldi	r30, 0x3C	; 60
    1472:	fa e0       	ldi	r31, 0x0A	; 10
    1474:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__prologue_saves__+0xc>
    1478:	6a 01       	movw	r12, r20
    147a:	12 2f       	mov	r17, r18
    147c:	b0 2e       	mov	r11, r16
    147e:	2b e3       	ldi	r18, 0x3B	; 59
    1480:	20 17       	cp	r18, r16
    1482:	20 f0       	brcs	.+8      	; 0x148c <dtoa_prf+0x20>
    1484:	ff 24       	eor	r15, r15
    1486:	f3 94       	inc	r15
    1488:	f0 0e       	add	r15, r16
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <dtoa_prf+0x24>
    148c:	2c e3       	ldi	r18, 0x3C	; 60
    148e:	f2 2e       	mov	r15, r18
    1490:	0f 2d       	mov	r16, r15
    1492:	27 e0       	ldi	r18, 0x07	; 7
    1494:	ae 01       	movw	r20, r28
    1496:	4f 5f       	subi	r20, 0xFF	; 255
    1498:	5f 4f       	sbci	r21, 0xFF	; 255
    149a:	0e 94 90 0b 	call	0x1720	; 0x1720 <__ftoa_engine>
    149e:	bc 01       	movw	r22, r24
    14a0:	49 81       	ldd	r20, Y+1	; 0x01
    14a2:	84 2f       	mov	r24, r20
    14a4:	89 70       	andi	r24, 0x09	; 9
    14a6:	81 30       	cpi	r24, 0x01	; 1
    14a8:	31 f0       	breq	.+12     	; 0x14b6 <dtoa_prf+0x4a>
    14aa:	e1 fc       	sbrc	r14, 1
    14ac:	06 c0       	rjmp	.+12     	; 0x14ba <dtoa_prf+0x4e>
    14ae:	e0 fe       	sbrs	r14, 0
    14b0:	06 c0       	rjmp	.+12     	; 0x14be <dtoa_prf+0x52>
    14b2:	90 e2       	ldi	r25, 0x20	; 32
    14b4:	05 c0       	rjmp	.+10     	; 0x14c0 <dtoa_prf+0x54>
    14b6:	9d e2       	ldi	r25, 0x2D	; 45
    14b8:	03 c0       	rjmp	.+6      	; 0x14c0 <dtoa_prf+0x54>
    14ba:	9b e2       	ldi	r25, 0x2B	; 43
    14bc:	01 c0       	rjmp	.+2      	; 0x14c0 <dtoa_prf+0x54>
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	5e 2d       	mov	r21, r14
    14c2:	50 71       	andi	r21, 0x10	; 16
    14c4:	43 ff       	sbrs	r20, 3
    14c6:	3c c0       	rjmp	.+120    	; 0x1540 <dtoa_prf+0xd4>
    14c8:	91 11       	cpse	r25, r1
    14ca:	02 c0       	rjmp	.+4      	; 0x14d0 <dtoa_prf+0x64>
    14cc:	83 e0       	ldi	r24, 0x03	; 3
    14ce:	01 c0       	rjmp	.+2      	; 0x14d2 <dtoa_prf+0x66>
    14d0:	84 e0       	ldi	r24, 0x04	; 4
    14d2:	81 17       	cp	r24, r17
    14d4:	18 f4       	brcc	.+6      	; 0x14dc <dtoa_prf+0x70>
    14d6:	21 2f       	mov	r18, r17
    14d8:	28 1b       	sub	r18, r24
    14da:	01 c0       	rjmp	.+2      	; 0x14de <dtoa_prf+0x72>
    14dc:	20 e0       	ldi	r18, 0x00	; 0
    14de:	51 11       	cpse	r21, r1
    14e0:	0b c0       	rjmp	.+22     	; 0x14f8 <dtoa_prf+0x8c>
    14e2:	f6 01       	movw	r30, r12
    14e4:	82 2f       	mov	r24, r18
    14e6:	30 e2       	ldi	r19, 0x20	; 32
    14e8:	88 23       	and	r24, r24
    14ea:	19 f0       	breq	.+6      	; 0x14f2 <dtoa_prf+0x86>
    14ec:	31 93       	st	Z+, r19
    14ee:	81 50       	subi	r24, 0x01	; 1
    14f0:	fb cf       	rjmp	.-10     	; 0x14e8 <dtoa_prf+0x7c>
    14f2:	c2 0e       	add	r12, r18
    14f4:	d1 1c       	adc	r13, r1
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	99 23       	and	r25, r25
    14fa:	29 f0       	breq	.+10     	; 0x1506 <dtoa_prf+0x9a>
    14fc:	d6 01       	movw	r26, r12
    14fe:	9c 93       	st	X, r25
    1500:	f6 01       	movw	r30, r12
    1502:	31 96       	adiw	r30, 0x01	; 1
    1504:	6f 01       	movw	r12, r30
    1506:	c6 01       	movw	r24, r12
    1508:	03 96       	adiw	r24, 0x03	; 3
    150a:	e2 fe       	sbrs	r14, 2
    150c:	0a c0       	rjmp	.+20     	; 0x1522 <dtoa_prf+0xb6>
    150e:	3e e4       	ldi	r19, 0x4E	; 78
    1510:	d6 01       	movw	r26, r12
    1512:	3c 93       	st	X, r19
    1514:	41 e4       	ldi	r20, 0x41	; 65
    1516:	11 96       	adiw	r26, 0x01	; 1
    1518:	4c 93       	st	X, r20
    151a:	11 97       	sbiw	r26, 0x01	; 1
    151c:	12 96       	adiw	r26, 0x02	; 2
    151e:	3c 93       	st	X, r19
    1520:	06 c0       	rjmp	.+12     	; 0x152e <dtoa_prf+0xc2>
    1522:	3e e6       	ldi	r19, 0x6E	; 110
    1524:	f6 01       	movw	r30, r12
    1526:	30 83       	st	Z, r19
    1528:	41 e6       	ldi	r20, 0x61	; 97
    152a:	41 83       	std	Z+1, r20	; 0x01
    152c:	32 83       	std	Z+2, r19	; 0x02
    152e:	fc 01       	movw	r30, r24
    1530:	32 2f       	mov	r19, r18
    1532:	40 e2       	ldi	r20, 0x20	; 32
    1534:	33 23       	and	r19, r19
    1536:	09 f4       	brne	.+2      	; 0x153a <dtoa_prf+0xce>
    1538:	42 c0       	rjmp	.+132    	; 0x15be <dtoa_prf+0x152>
    153a:	41 93       	st	Z+, r20
    153c:	31 50       	subi	r19, 0x01	; 1
    153e:	fa cf       	rjmp	.-12     	; 0x1534 <dtoa_prf+0xc8>
    1540:	42 ff       	sbrs	r20, 2
    1542:	44 c0       	rjmp	.+136    	; 0x15cc <dtoa_prf+0x160>
    1544:	91 11       	cpse	r25, r1
    1546:	02 c0       	rjmp	.+4      	; 0x154c <dtoa_prf+0xe0>
    1548:	83 e0       	ldi	r24, 0x03	; 3
    154a:	01 c0       	rjmp	.+2      	; 0x154e <dtoa_prf+0xe2>
    154c:	84 e0       	ldi	r24, 0x04	; 4
    154e:	81 17       	cp	r24, r17
    1550:	18 f4       	brcc	.+6      	; 0x1558 <dtoa_prf+0xec>
    1552:	21 2f       	mov	r18, r17
    1554:	28 1b       	sub	r18, r24
    1556:	01 c0       	rjmp	.+2      	; 0x155a <dtoa_prf+0xee>
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	51 11       	cpse	r21, r1
    155c:	0b c0       	rjmp	.+22     	; 0x1574 <dtoa_prf+0x108>
    155e:	f6 01       	movw	r30, r12
    1560:	82 2f       	mov	r24, r18
    1562:	30 e2       	ldi	r19, 0x20	; 32
    1564:	88 23       	and	r24, r24
    1566:	19 f0       	breq	.+6      	; 0x156e <dtoa_prf+0x102>
    1568:	31 93       	st	Z+, r19
    156a:	81 50       	subi	r24, 0x01	; 1
    156c:	fb cf       	rjmp	.-10     	; 0x1564 <dtoa_prf+0xf8>
    156e:	c2 0e       	add	r12, r18
    1570:	d1 1c       	adc	r13, r1
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	99 23       	and	r25, r25
    1576:	29 f0       	breq	.+10     	; 0x1582 <dtoa_prf+0x116>
    1578:	d6 01       	movw	r26, r12
    157a:	9c 93       	st	X, r25
    157c:	f6 01       	movw	r30, r12
    157e:	31 96       	adiw	r30, 0x01	; 1
    1580:	6f 01       	movw	r12, r30
    1582:	c6 01       	movw	r24, r12
    1584:	03 96       	adiw	r24, 0x03	; 3
    1586:	e2 fe       	sbrs	r14, 2
    1588:	0b c0       	rjmp	.+22     	; 0x15a0 <dtoa_prf+0x134>
    158a:	39 e4       	ldi	r19, 0x49	; 73
    158c:	d6 01       	movw	r26, r12
    158e:	3c 93       	st	X, r19
    1590:	3e e4       	ldi	r19, 0x4E	; 78
    1592:	11 96       	adiw	r26, 0x01	; 1
    1594:	3c 93       	st	X, r19
    1596:	11 97       	sbiw	r26, 0x01	; 1
    1598:	36 e4       	ldi	r19, 0x46	; 70
    159a:	12 96       	adiw	r26, 0x02	; 2
    159c:	3c 93       	st	X, r19
    159e:	07 c0       	rjmp	.+14     	; 0x15ae <dtoa_prf+0x142>
    15a0:	39 e6       	ldi	r19, 0x69	; 105
    15a2:	f6 01       	movw	r30, r12
    15a4:	30 83       	st	Z, r19
    15a6:	3e e6       	ldi	r19, 0x6E	; 110
    15a8:	31 83       	std	Z+1, r19	; 0x01
    15aa:	36 e6       	ldi	r19, 0x66	; 102
    15ac:	32 83       	std	Z+2, r19	; 0x02
    15ae:	fc 01       	movw	r30, r24
    15b0:	32 2f       	mov	r19, r18
    15b2:	40 e2       	ldi	r20, 0x20	; 32
    15b4:	33 23       	and	r19, r19
    15b6:	19 f0       	breq	.+6      	; 0x15be <dtoa_prf+0x152>
    15b8:	41 93       	st	Z+, r20
    15ba:	31 50       	subi	r19, 0x01	; 1
    15bc:	fb cf       	rjmp	.-10     	; 0x15b4 <dtoa_prf+0x148>
    15be:	fc 01       	movw	r30, r24
    15c0:	e2 0f       	add	r30, r18
    15c2:	f1 1d       	adc	r31, r1
    15c4:	10 82       	st	Z, r1
    15c6:	8e ef       	ldi	r24, 0xFE	; 254
    15c8:	9f ef       	ldi	r25, 0xFF	; 255
    15ca:	a6 c0       	rjmp	.+332    	; 0x1718 <dtoa_prf+0x2ac>
    15cc:	21 e0       	ldi	r18, 0x01	; 1
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	91 11       	cpse	r25, r1
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <dtoa_prf+0x16c>
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	16 16       	cp	r1, r22
    15da:	17 06       	cpc	r1, r23
    15dc:	1c f4       	brge	.+6      	; 0x15e4 <dtoa_prf+0x178>
    15de:	fb 01       	movw	r30, r22
    15e0:	31 96       	adiw	r30, 0x01	; 1
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <dtoa_prf+0x17c>
    15e4:	e1 e0       	ldi	r30, 0x01	; 1
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	2e 0f       	add	r18, r30
    15ea:	3f 1f       	adc	r19, r31
    15ec:	bb 20       	and	r11, r11
    15ee:	21 f0       	breq	.+8      	; 0x15f8 <dtoa_prf+0x18c>
    15f0:	eb 2d       	mov	r30, r11
    15f2:	f0 e0       	ldi	r31, 0x00	; 0
    15f4:	31 96       	adiw	r30, 0x01	; 1
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <dtoa_prf+0x190>
    15f8:	e0 e0       	ldi	r30, 0x00	; 0
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	2e 0f       	add	r18, r30
    15fe:	3f 1f       	adc	r19, r31
    1600:	e1 2f       	mov	r30, r17
    1602:	f0 e0       	ldi	r31, 0x00	; 0
    1604:	2e 17       	cp	r18, r30
    1606:	3f 07       	cpc	r19, r31
    1608:	1c f4       	brge	.+6      	; 0x1610 <dtoa_prf+0x1a4>
    160a:	12 1b       	sub	r17, r18
    160c:	21 2f       	mov	r18, r17
    160e:	01 c0       	rjmp	.+2      	; 0x1612 <dtoa_prf+0x1a6>
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	8e 2d       	mov	r24, r14
    1614:	88 71       	andi	r24, 0x18	; 24
    1616:	59 f4       	brne	.+22     	; 0x162e <dtoa_prf+0x1c2>
    1618:	f6 01       	movw	r30, r12
    161a:	82 2f       	mov	r24, r18
    161c:	30 e2       	ldi	r19, 0x20	; 32
    161e:	88 23       	and	r24, r24
    1620:	19 f0       	breq	.+6      	; 0x1628 <dtoa_prf+0x1bc>
    1622:	31 93       	st	Z+, r19
    1624:	81 50       	subi	r24, 0x01	; 1
    1626:	fb cf       	rjmp	.-10     	; 0x161e <dtoa_prf+0x1b2>
    1628:	c2 0e       	add	r12, r18
    162a:	d1 1c       	adc	r13, r1
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	99 23       	and	r25, r25
    1630:	29 f0       	breq	.+10     	; 0x163c <dtoa_prf+0x1d0>
    1632:	d6 01       	movw	r26, r12
    1634:	9c 93       	st	X, r25
    1636:	f6 01       	movw	r30, r12
    1638:	31 96       	adiw	r30, 0x01	; 1
    163a:	6f 01       	movw	r12, r30
    163c:	51 11       	cpse	r21, r1
    163e:	0b c0       	rjmp	.+22     	; 0x1656 <dtoa_prf+0x1ea>
    1640:	f6 01       	movw	r30, r12
    1642:	82 2f       	mov	r24, r18
    1644:	90 e3       	ldi	r25, 0x30	; 48
    1646:	88 23       	and	r24, r24
    1648:	19 f0       	breq	.+6      	; 0x1650 <dtoa_prf+0x1e4>
    164a:	91 93       	st	Z+, r25
    164c:	81 50       	subi	r24, 0x01	; 1
    164e:	fb cf       	rjmp	.-10     	; 0x1646 <dtoa_prf+0x1da>
    1650:	c2 0e       	add	r12, r18
    1652:	d1 1c       	adc	r13, r1
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	0f 2d       	mov	r16, r15
    1658:	06 0f       	add	r16, r22
    165a:	9a 81       	ldd	r25, Y+2	; 0x02
    165c:	34 2f       	mov	r19, r20
    165e:	30 71       	andi	r19, 0x10	; 16
    1660:	44 ff       	sbrs	r20, 4
    1662:	03 c0       	rjmp	.+6      	; 0x166a <dtoa_prf+0x1fe>
    1664:	91 33       	cpi	r25, 0x31	; 49
    1666:	09 f4       	brne	.+2      	; 0x166a <dtoa_prf+0x1fe>
    1668:	01 50       	subi	r16, 0x01	; 1
    166a:	10 16       	cp	r1, r16
    166c:	24 f4       	brge	.+8      	; 0x1676 <dtoa_prf+0x20a>
    166e:	09 30       	cpi	r16, 0x09	; 9
    1670:	18 f0       	brcs	.+6      	; 0x1678 <dtoa_prf+0x20c>
    1672:	08 e0       	ldi	r16, 0x08	; 8
    1674:	01 c0       	rjmp	.+2      	; 0x1678 <dtoa_prf+0x20c>
    1676:	01 e0       	ldi	r16, 0x01	; 1
    1678:	ab 01       	movw	r20, r22
    167a:	77 ff       	sbrs	r23, 7
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <dtoa_prf+0x216>
    167e:	40 e0       	ldi	r20, 0x00	; 0
    1680:	50 e0       	ldi	r21, 0x00	; 0
    1682:	fb 01       	movw	r30, r22
    1684:	e4 1b       	sub	r30, r20
    1686:	f5 0b       	sbc	r31, r21
    1688:	a1 e0       	ldi	r26, 0x01	; 1
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	ac 0f       	add	r26, r28
    168e:	bd 1f       	adc	r27, r29
    1690:	ea 0f       	add	r30, r26
    1692:	fb 1f       	adc	r31, r27
    1694:	8e e2       	ldi	r24, 0x2E	; 46
    1696:	a8 2e       	mov	r10, r24
    1698:	4b 01       	movw	r8, r22
    169a:	80 1a       	sub	r8, r16
    169c:	91 08       	sbc	r9, r1
    169e:	0b 2d       	mov	r16, r11
    16a0:	10 e0       	ldi	r17, 0x00	; 0
    16a2:	11 95       	neg	r17
    16a4:	01 95       	neg	r16
    16a6:	11 09       	sbc	r17, r1
    16a8:	4f 3f       	cpi	r20, 0xFF	; 255
    16aa:	bf ef       	ldi	r27, 0xFF	; 255
    16ac:	5b 07       	cpc	r21, r27
    16ae:	21 f4       	brne	.+8      	; 0x16b8 <dtoa_prf+0x24c>
    16b0:	d6 01       	movw	r26, r12
    16b2:	ac 92       	st	X, r10
    16b4:	11 96       	adiw	r26, 0x01	; 1
    16b6:	6d 01       	movw	r12, r26
    16b8:	64 17       	cp	r22, r20
    16ba:	75 07       	cpc	r23, r21
    16bc:	2c f0       	brlt	.+10     	; 0x16c8 <dtoa_prf+0x25c>
    16be:	84 16       	cp	r8, r20
    16c0:	95 06       	cpc	r9, r21
    16c2:	14 f4       	brge	.+4      	; 0x16c8 <dtoa_prf+0x25c>
    16c4:	81 81       	ldd	r24, Z+1	; 0x01
    16c6:	01 c0       	rjmp	.+2      	; 0x16ca <dtoa_prf+0x25e>
    16c8:	80 e3       	ldi	r24, 0x30	; 48
    16ca:	41 50       	subi	r20, 0x01	; 1
    16cc:	51 09       	sbc	r21, r1
    16ce:	31 96       	adiw	r30, 0x01	; 1
    16d0:	d6 01       	movw	r26, r12
    16d2:	11 96       	adiw	r26, 0x01	; 1
    16d4:	7d 01       	movw	r14, r26
    16d6:	40 17       	cp	r20, r16
    16d8:	51 07       	cpc	r21, r17
    16da:	24 f0       	brlt	.+8      	; 0x16e4 <dtoa_prf+0x278>
    16dc:	d6 01       	movw	r26, r12
    16de:	8c 93       	st	X, r24
    16e0:	67 01       	movw	r12, r14
    16e2:	e2 cf       	rjmp	.-60     	; 0x16a8 <dtoa_prf+0x23c>
    16e4:	64 17       	cp	r22, r20
    16e6:	75 07       	cpc	r23, r21
    16e8:	39 f4       	brne	.+14     	; 0x16f8 <dtoa_prf+0x28c>
    16ea:	96 33       	cpi	r25, 0x36	; 54
    16ec:	20 f4       	brcc	.+8      	; 0x16f6 <dtoa_prf+0x28a>
    16ee:	95 33       	cpi	r25, 0x35	; 53
    16f0:	19 f4       	brne	.+6      	; 0x16f8 <dtoa_prf+0x28c>
    16f2:	31 11       	cpse	r19, r1
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <dtoa_prf+0x28c>
    16f6:	81 e3       	ldi	r24, 0x31	; 49
    16f8:	f6 01       	movw	r30, r12
    16fa:	80 83       	st	Z, r24
    16fc:	f7 01       	movw	r30, r14
    16fe:	82 2f       	mov	r24, r18
    1700:	90 e2       	ldi	r25, 0x20	; 32
    1702:	88 23       	and	r24, r24
    1704:	19 f0       	breq	.+6      	; 0x170c <dtoa_prf+0x2a0>
    1706:	91 93       	st	Z+, r25
    1708:	81 50       	subi	r24, 0x01	; 1
    170a:	fb cf       	rjmp	.-10     	; 0x1702 <dtoa_prf+0x296>
    170c:	f7 01       	movw	r30, r14
    170e:	e2 0f       	add	r30, r18
    1710:	f1 1d       	adc	r31, r1
    1712:	10 82       	st	Z, r1
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	29 96       	adiw	r28, 0x09	; 9
    171a:	ec e0       	ldi	r30, 0x0C	; 12
    171c:	0c 94 8a 0c 	jmp	0x1914	; 0x1914 <__epilogue_restores__+0xc>

00001720 <__ftoa_engine>:
    1720:	28 30       	cpi	r18, 0x08	; 8
    1722:	08 f0       	brcs	.+2      	; 0x1726 <__ftoa_engine+0x6>
    1724:	27 e0       	ldi	r18, 0x07	; 7
    1726:	33 27       	eor	r19, r19
    1728:	da 01       	movw	r26, r20
    172a:	99 0f       	add	r25, r25
    172c:	31 1d       	adc	r19, r1
    172e:	87 fd       	sbrc	r24, 7
    1730:	91 60       	ori	r25, 0x01	; 1
    1732:	00 96       	adiw	r24, 0x00	; 0
    1734:	61 05       	cpc	r22, r1
    1736:	71 05       	cpc	r23, r1
    1738:	39 f4       	brne	.+14     	; 0x1748 <__ftoa_engine+0x28>
    173a:	32 60       	ori	r19, 0x02	; 2
    173c:	2e 5f       	subi	r18, 0xFE	; 254
    173e:	3d 93       	st	X+, r19
    1740:	30 e3       	ldi	r19, 0x30	; 48
    1742:	2a 95       	dec	r18
    1744:	e1 f7       	brne	.-8      	; 0x173e <__ftoa_engine+0x1e>
    1746:	08 95       	ret
    1748:	9f 3f       	cpi	r25, 0xFF	; 255
    174a:	30 f0       	brcs	.+12     	; 0x1758 <__ftoa_engine+0x38>
    174c:	80 38       	cpi	r24, 0x80	; 128
    174e:	71 05       	cpc	r23, r1
    1750:	61 05       	cpc	r22, r1
    1752:	09 f0       	breq	.+2      	; 0x1756 <__ftoa_engine+0x36>
    1754:	3c 5f       	subi	r19, 0xFC	; 252
    1756:	3c 5f       	subi	r19, 0xFC	; 252
    1758:	3d 93       	st	X+, r19
    175a:	91 30       	cpi	r25, 0x01	; 1
    175c:	08 f0       	brcs	.+2      	; 0x1760 <__ftoa_engine+0x40>
    175e:	80 68       	ori	r24, 0x80	; 128
    1760:	91 1d       	adc	r25, r1
    1762:	df 93       	push	r29
    1764:	cf 93       	push	r28
    1766:	1f 93       	push	r17
    1768:	0f 93       	push	r16
    176a:	ff 92       	push	r15
    176c:	ef 92       	push	r14
    176e:	19 2f       	mov	r17, r25
    1770:	98 7f       	andi	r25, 0xF8	; 248
    1772:	96 95       	lsr	r25
    1774:	e9 2f       	mov	r30, r25
    1776:	96 95       	lsr	r25
    1778:	96 95       	lsr	r25
    177a:	e9 0f       	add	r30, r25
    177c:	ff 27       	eor	r31, r31
    177e:	e2 55       	subi	r30, 0x52	; 82
    1780:	ff 4f       	sbci	r31, 0xFF	; 255
    1782:	99 27       	eor	r25, r25
    1784:	33 27       	eor	r19, r19
    1786:	ee 24       	eor	r14, r14
    1788:	ff 24       	eor	r15, r15
    178a:	a7 01       	movw	r20, r14
    178c:	e7 01       	movw	r28, r14
    178e:	05 90       	lpm	r0, Z+
    1790:	08 94       	sec
    1792:	07 94       	ror	r0
    1794:	28 f4       	brcc	.+10     	; 0x17a0 <__ftoa_engine+0x80>
    1796:	36 0f       	add	r19, r22
    1798:	e7 1e       	adc	r14, r23
    179a:	f8 1e       	adc	r15, r24
    179c:	49 1f       	adc	r20, r25
    179e:	51 1d       	adc	r21, r1
    17a0:	66 0f       	add	r22, r22
    17a2:	77 1f       	adc	r23, r23
    17a4:	88 1f       	adc	r24, r24
    17a6:	99 1f       	adc	r25, r25
    17a8:	06 94       	lsr	r0
    17aa:	a1 f7       	brne	.-24     	; 0x1794 <__ftoa_engine+0x74>
    17ac:	05 90       	lpm	r0, Z+
    17ae:	07 94       	ror	r0
    17b0:	28 f4       	brcc	.+10     	; 0x17bc <__ftoa_engine+0x9c>
    17b2:	e7 0e       	add	r14, r23
    17b4:	f8 1e       	adc	r15, r24
    17b6:	49 1f       	adc	r20, r25
    17b8:	56 1f       	adc	r21, r22
    17ba:	c1 1d       	adc	r28, r1
    17bc:	77 0f       	add	r23, r23
    17be:	88 1f       	adc	r24, r24
    17c0:	99 1f       	adc	r25, r25
    17c2:	66 1f       	adc	r22, r22
    17c4:	06 94       	lsr	r0
    17c6:	a1 f7       	brne	.-24     	; 0x17b0 <__ftoa_engine+0x90>
    17c8:	05 90       	lpm	r0, Z+
    17ca:	07 94       	ror	r0
    17cc:	28 f4       	brcc	.+10     	; 0x17d8 <__ftoa_engine+0xb8>
    17ce:	f8 0e       	add	r15, r24
    17d0:	49 1f       	adc	r20, r25
    17d2:	56 1f       	adc	r21, r22
    17d4:	c7 1f       	adc	r28, r23
    17d6:	d1 1d       	adc	r29, r1
    17d8:	88 0f       	add	r24, r24
    17da:	99 1f       	adc	r25, r25
    17dc:	66 1f       	adc	r22, r22
    17de:	77 1f       	adc	r23, r23
    17e0:	06 94       	lsr	r0
    17e2:	a1 f7       	brne	.-24     	; 0x17cc <__ftoa_engine+0xac>
    17e4:	05 90       	lpm	r0, Z+
    17e6:	07 94       	ror	r0
    17e8:	20 f4       	brcc	.+8      	; 0x17f2 <__ftoa_engine+0xd2>
    17ea:	49 0f       	add	r20, r25
    17ec:	56 1f       	adc	r21, r22
    17ee:	c7 1f       	adc	r28, r23
    17f0:	d8 1f       	adc	r29, r24
    17f2:	99 0f       	add	r25, r25
    17f4:	66 1f       	adc	r22, r22
    17f6:	77 1f       	adc	r23, r23
    17f8:	88 1f       	adc	r24, r24
    17fa:	06 94       	lsr	r0
    17fc:	a9 f7       	brne	.-22     	; 0x17e8 <__ftoa_engine+0xc8>
    17fe:	84 91       	lpm	r24, Z
    1800:	10 95       	com	r17
    1802:	17 70       	andi	r17, 0x07	; 7
    1804:	41 f0       	breq	.+16     	; 0x1816 <__ftoa_engine+0xf6>
    1806:	d6 95       	lsr	r29
    1808:	c7 95       	ror	r28
    180a:	57 95       	ror	r21
    180c:	47 95       	ror	r20
    180e:	f7 94       	ror	r15
    1810:	e7 94       	ror	r14
    1812:	1a 95       	dec	r17
    1814:	c1 f7       	brne	.-16     	; 0x1806 <__ftoa_engine+0xe6>
    1816:	e4 e5       	ldi	r30, 0x54	; 84
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	68 94       	set
    181c:	15 90       	lpm	r1, Z+
    181e:	15 91       	lpm	r17, Z+
    1820:	35 91       	lpm	r19, Z+
    1822:	65 91       	lpm	r22, Z+
    1824:	95 91       	lpm	r25, Z+
    1826:	05 90       	lpm	r0, Z+
    1828:	7f e2       	ldi	r23, 0x2F	; 47
    182a:	73 95       	inc	r23
    182c:	e1 18       	sub	r14, r1
    182e:	f1 0a       	sbc	r15, r17
    1830:	43 0b       	sbc	r20, r19
    1832:	56 0b       	sbc	r21, r22
    1834:	c9 0b       	sbc	r28, r25
    1836:	d0 09       	sbc	r29, r0
    1838:	c0 f7       	brcc	.-16     	; 0x182a <__ftoa_engine+0x10a>
    183a:	e1 0c       	add	r14, r1
    183c:	f1 1e       	adc	r15, r17
    183e:	43 1f       	adc	r20, r19
    1840:	56 1f       	adc	r21, r22
    1842:	c9 1f       	adc	r28, r25
    1844:	d0 1d       	adc	r29, r0
    1846:	7e f4       	brtc	.+30     	; 0x1866 <__ftoa_engine+0x146>
    1848:	70 33       	cpi	r23, 0x30	; 48
    184a:	11 f4       	brne	.+4      	; 0x1850 <__ftoa_engine+0x130>
    184c:	8a 95       	dec	r24
    184e:	e6 cf       	rjmp	.-52     	; 0x181c <__ftoa_engine+0xfc>
    1850:	e8 94       	clt
    1852:	01 50       	subi	r16, 0x01	; 1
    1854:	30 f0       	brcs	.+12     	; 0x1862 <__ftoa_engine+0x142>
    1856:	08 0f       	add	r16, r24
    1858:	0a f4       	brpl	.+2      	; 0x185c <__ftoa_engine+0x13c>
    185a:	00 27       	eor	r16, r16
    185c:	02 17       	cp	r16, r18
    185e:	08 f4       	brcc	.+2      	; 0x1862 <__ftoa_engine+0x142>
    1860:	20 2f       	mov	r18, r16
    1862:	23 95       	inc	r18
    1864:	02 2f       	mov	r16, r18
    1866:	7a 33       	cpi	r23, 0x3A	; 58
    1868:	28 f0       	brcs	.+10     	; 0x1874 <__ftoa_engine+0x154>
    186a:	79 e3       	ldi	r23, 0x39	; 57
    186c:	7d 93       	st	X+, r23
    186e:	2a 95       	dec	r18
    1870:	e9 f7       	brne	.-6      	; 0x186c <__ftoa_engine+0x14c>
    1872:	10 c0       	rjmp	.+32     	; 0x1894 <__ftoa_engine+0x174>
    1874:	7d 93       	st	X+, r23
    1876:	2a 95       	dec	r18
    1878:	89 f6       	brne	.-94     	; 0x181c <__ftoa_engine+0xfc>
    187a:	06 94       	lsr	r0
    187c:	97 95       	ror	r25
    187e:	67 95       	ror	r22
    1880:	37 95       	ror	r19
    1882:	17 95       	ror	r17
    1884:	17 94       	ror	r1
    1886:	e1 18       	sub	r14, r1
    1888:	f1 0a       	sbc	r15, r17
    188a:	43 0b       	sbc	r20, r19
    188c:	56 0b       	sbc	r21, r22
    188e:	c9 0b       	sbc	r28, r25
    1890:	d0 09       	sbc	r29, r0
    1892:	98 f0       	brcs	.+38     	; 0x18ba <__ftoa_engine+0x19a>
    1894:	23 95       	inc	r18
    1896:	7e 91       	ld	r23, -X
    1898:	73 95       	inc	r23
    189a:	7a 33       	cpi	r23, 0x3A	; 58
    189c:	08 f0       	brcs	.+2      	; 0x18a0 <__ftoa_engine+0x180>
    189e:	70 e3       	ldi	r23, 0x30	; 48
    18a0:	7c 93       	st	X, r23
    18a2:	20 13       	cpse	r18, r16
    18a4:	b8 f7       	brcc	.-18     	; 0x1894 <__ftoa_engine+0x174>
    18a6:	7e 91       	ld	r23, -X
    18a8:	70 61       	ori	r23, 0x10	; 16
    18aa:	7d 93       	st	X+, r23
    18ac:	30 f0       	brcs	.+12     	; 0x18ba <__ftoa_engine+0x19a>
    18ae:	83 95       	inc	r24
    18b0:	71 e3       	ldi	r23, 0x31	; 49
    18b2:	7d 93       	st	X+, r23
    18b4:	70 e3       	ldi	r23, 0x30	; 48
    18b6:	2a 95       	dec	r18
    18b8:	e1 f7       	brne	.-8      	; 0x18b2 <__ftoa_engine+0x192>
    18ba:	11 24       	eor	r1, r1
    18bc:	ef 90       	pop	r14
    18be:	ff 90       	pop	r15
    18c0:	0f 91       	pop	r16
    18c2:	1f 91       	pop	r17
    18c4:	cf 91       	pop	r28
    18c6:	df 91       	pop	r29
    18c8:	99 27       	eor	r25, r25
    18ca:	87 fd       	sbrc	r24, 7
    18cc:	90 95       	com	r25
    18ce:	08 95       	ret

000018d0 <__prologue_saves__>:
    18d0:	2f 92       	push	r2
    18d2:	3f 92       	push	r3
    18d4:	4f 92       	push	r4
    18d6:	5f 92       	push	r5
    18d8:	6f 92       	push	r6
    18da:	7f 92       	push	r7
    18dc:	8f 92       	push	r8
    18de:	9f 92       	push	r9
    18e0:	af 92       	push	r10
    18e2:	bf 92       	push	r11
    18e4:	cf 92       	push	r12
    18e6:	df 92       	push	r13
    18e8:	ef 92       	push	r14
    18ea:	ff 92       	push	r15
    18ec:	0f 93       	push	r16
    18ee:	1f 93       	push	r17
    18f0:	cf 93       	push	r28
    18f2:	df 93       	push	r29
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62
    18f8:	ca 1b       	sub	r28, r26
    18fa:	db 0b       	sbc	r29, r27
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	f8 94       	cli
    1900:	de bf       	out	0x3e, r29	; 62
    1902:	0f be       	out	0x3f, r0	; 63
    1904:	cd bf       	out	0x3d, r28	; 61
    1906:	09 94       	ijmp

00001908 <__epilogue_restores__>:
    1908:	2a 88       	ldd	r2, Y+18	; 0x12
    190a:	39 88       	ldd	r3, Y+17	; 0x11
    190c:	48 88       	ldd	r4, Y+16	; 0x10
    190e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1910:	6e 84       	ldd	r6, Y+14	; 0x0e
    1912:	7d 84       	ldd	r7, Y+13	; 0x0d
    1914:	8c 84       	ldd	r8, Y+12	; 0x0c
    1916:	9b 84       	ldd	r9, Y+11	; 0x0b
    1918:	aa 84       	ldd	r10, Y+10	; 0x0a
    191a:	b9 84       	ldd	r11, Y+9	; 0x09
    191c:	c8 84       	ldd	r12, Y+8	; 0x08
    191e:	df 80       	ldd	r13, Y+7	; 0x07
    1920:	ee 80       	ldd	r14, Y+6	; 0x06
    1922:	fd 80       	ldd	r15, Y+5	; 0x05
    1924:	0c 81       	ldd	r16, Y+4	; 0x04
    1926:	1b 81       	ldd	r17, Y+3	; 0x03
    1928:	aa 81       	ldd	r26, Y+2	; 0x02
    192a:	b9 81       	ldd	r27, Y+1	; 0x01
    192c:	ce 0f       	add	r28, r30
    192e:	d1 1d       	adc	r29, r1
    1930:	0f b6       	in	r0, 0x3f	; 63
    1932:	f8 94       	cli
    1934:	de bf       	out	0x3e, r29	; 62
    1936:	0f be       	out	0x3f, r0	; 63
    1938:	cd bf       	out	0x3d, r28	; 61
    193a:	ed 01       	movw	r28, r26
    193c:	08 95       	ret

0000193e <_exit>:
    193e:	f8 94       	cli

00001940 <__stop_program>:
    1940:	ff cf       	rjmp	.-2      	; 0x1940 <__stop_program>
